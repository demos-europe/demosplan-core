<?php

declare(strict_types=1);

namespace demosplan\DemosPlanCoreBundle\EntityPath;

use EDT\PathBuilding\End;
use EDT\PathBuilding\PropertyAutoPathInterface;
use EDT\PathBuilding\PropertyAutoPathTrait;
use demosplan\DemosPlanCoreBundle\Entity\Procedure\ProcedureSettings;

/**
 * WARNING: THIS CLASS IS AUTOGENERATED.
 * MANUAL CHANGES WILL BE LOST ON RE-GENERATION.
 *
 * To add additional properties, you may want to
 * create an extending class and add them there.
 *
 * @property-read End $id {@link ProcedureSettings::id}
 * @property-read End $mapExtent {@link ProcedureSettings::mapExtent}
 * @property-read End $startScale {@link ProcedureSettings::startScale}
 * @property-read End $availableScale {@link ProcedureSettings::availableScale}
 * @property-read End $boundingBox {@link ProcedureSettings::boundingBox}
 * @property-read End $informationUrl {@link ProcedureSettings::informationUrl}
 * @property-read End $defaultLayer {@link ProcedureSettings::defaultLayer}
 * @property-read End $territory {@link ProcedureSettings::territory}
 * @property-read End $coordinate {@link ProcedureSettings::coordinate}
 * @property-read End $planEnable {@link ProcedureSettings::planEnable}
 * @property-read End $planText {@link ProcedureSettings::planText}
 * @property-read End $planPDF {@link ProcedureSettings::planPDF}
 * @property-read End $planPara1PDF {@link ProcedureSettings::planPara1PDF}
 * @property-read End $planPara2PDF {@link ProcedureSettings::planPara2PDF}
 * @property-read End $planDrawText {@link ProcedureSettings::planDrawText}
 * @property-read End $planDrawPDF {@link ProcedureSettings::planDrawPDF}
 * @property-read End $emailTitle {@link ProcedureSettings::emailTitle}
 * @property-read End $emailText {@link ProcedureSettings::emailText}
 * @property-read End $emailCc {@link ProcedureSettings::emailCc}
 * @property-read End $links {@link ProcedureSettings::links}
 * @property-read ProcedurePath $procedure {@link ProcedureSettings::procedure}
 * @property-read End $pictogram {@link ProcedureSettings::pictogram}
 * @property-read End $designatedPhase {@link ProcedureSettings::designatedPhase}
 * @property-read End $designatedPublicPhase {@link ProcedureSettings::designatedPublicPhase}
 * @property-read End $designatedSwitchDate {@link ProcedureSettings::designatedSwitchDate}
 * @property-read End $designatedPublicSwitchDate {@link ProcedureSettings::designatedPublicSwitchDate}
 * @property-read UserPath $designatedPhaseChangeUser {@link ProcedureSettings::designatedPhaseChangeUser}
 * @property-read UserPath $designatedPublicPhaseChangeUser {@link ProcedureSettings::designatedPublicPhaseChangeUser}
 * @property-read End $designatedEndDate {@link ProcedureSettings::designatedEndDate}
 * @property-read End $designatedPublicEndDate {@link ProcedureSettings::designatedPublicEndDate}
 * @property-read End $sendMailsToCounties {@link ProcedureSettings::sendMailsToCounties}
 * @property-read End $planningArea {@link ProcedureSettings::planningArea}
 * @property-read End $scales {@link ProcedureSettings::scales}
 * @property-read End $legalNotice {@link ProcedureSettings::legalNotice}
 * @property-read End $copyright {@link ProcedureSettings::copyright}
 * @property-read End $mapHint {@link ProcedureSettings::mapHint}
 * @property-read ProcedurePath $allowedSegmentAccessProcedures {@link ProcedureSettings::allowedSegmentAccessProcedures}
 */
class ProcedureSettingsPath implements PropertyAutoPathInterface
{
	use PropertyAutoPathTrait;
}
