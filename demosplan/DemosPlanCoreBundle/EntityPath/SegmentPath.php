<?php

declare(strict_types=1);

namespace demosplan\DemosPlanCoreBundle\EntityPath;

use EDT\PathBuilding\End;
use EDT\PathBuilding\PropertyAutoPathInterface;
use EDT\PathBuilding\PropertyAutoPathTrait;
use demosplan\DemosPlanCoreBundle\Entity\Statement\Segment;
use demosplan\DemosPlanCoreBundle\EntityPath\SegmentPath as SegmentPath1;

/**
 * WARNING: THIS CLASS IS AUTOGENERATED.
 * MANUAL CHANGES WILL BE LOST ON RE-GENERATION.
 *
 * To add additional properties, you may want to
 * create an extending class and add them there.
 *
 * @property-read StatementPath $parentStatementOfSegment {@link Segment::parentStatementOfSegment}
 * @property-read SegmentCommentPath $comments {@link Segment::comments}
 * @property-read End $orderInProcedure {@link Segment::orderInProcedure}
 * @property-read PlacePath $place {@link Segment::place}
 * @property-read End $id {@link Segment::id}
 * @property-read StatementPath $parent {@link Segment::parent}
 * @property-read StatementPath $children {@link Segment::children}
 * @property-read StatementPath $original {@link Segment::original}
 * @property-read StatementPath $statementsCreatedFromOriginal {@link Segment::statementsCreatedFromOriginal}
 * @property-read End $priority {@link Segment::priority}
 * @property-read End $externId {@link Segment::externId}
 * @property-read End $internId {@link Segment::internId}
 * @property-read UserPath $user {@link Segment::user}
 * @property-read OrgaPath $organisation {@link Segment::organisation}
 * @property-read ProcedurePath $procedure {@link Segment::procedure}
 * @property-read End $represents {@link Segment::represents}
 * @property-read End $representationCheck {@link Segment::representationCheck}
 * @property-read End $phase {@link Segment::phase}
 * @property-read End $status {@link Segment::status}
 * @property-read End $created {@link Segment::created}
 * @property-read End $modified {@link Segment::modified}
 * @property-read End $send {@link Segment::send}
 * @property-read End $sentAssessmentDate {@link Segment::sentAssessmentDate}
 * @property-read End $submit {@link Segment::submit}
 * @property-read End $deletedDate {@link Segment::deletedDate}
 * @property-read End $deleted {@link Segment::deleted}
 * @property-read End $negativeStatement {@link Segment::negativeStatement}
 * @property-read End $sentAssessment {@link Segment::sentAssessment}
 * @property-read End $publicUseName {@link Segment::publicUseName}
 * @property-read End $publicVerified {@link Segment::publicVerified}
 * @property-read OriginalStatementAnonymizationPath $anonymizations {@link Segment::anonymizations}
 * @property-read End $publicStatement {@link Segment::publicStatement}
 * @property-read End $toSendPerMail {@link Segment::toSendPerMail}
 * @property-read End $title {@link Segment::title}
 * @property-read End $text {@link Segment::text}
 * @property-read End $recommendation {@link Segment::recommendation}
 * @property-read End $memo {@link Segment::memo}
 * @property-read End $feedback {@link Segment::feedback}
 * @property-read End $reasonParagraph {@link Segment::reasonParagraph}
 * @property-read End $planningDocument {@link Segment::planningDocument}
 * @property-read End $file {@link Segment::file}
 * @property-read End $mapFile {@link Segment::mapFile}
 * @property-read End $countyNotified {@link Segment::countyNotified}
 * @property-read ParagraphVersionPath $paragraph {@link Segment::paragraph}
 * @property-read SingleDocumentVersionPath $document {@link Segment::document}
 * @property-read ElementsPath $element {@link Segment::element}
 * @property-read End $polygon {@link Segment::polygon}
 * @property-read DraftStatementPath $draftStatement {@link Segment::draftStatement}
 * @property-read StatementMetaPath $meta {@link Segment::meta}
 * @property-read StatementVersionFieldPath $version {@link Segment::version}
 * @property-read StatementAttributePath $statementAttributes {@link Segment::statementAttributes}
 * @property-read StatementVotePath $votes {@link Segment::votes}
 * @property-read End $numberOfAnonymVotes {@link Segment::numberOfAnonymVotes}
 * @property-read StatementLikePath $likes {@link Segment::likes}
 * @property-read TagPath $tags {@link Segment::tags}
 * @property-read CountyPath $counties {@link Segment::counties}
 * @property-read PriorityAreaPath $priorityAreas {@link Segment::priorityAreas}
 * @property-read MunicipalityPath $municipalities {@link Segment::municipalities}
 * @property-read StatementFragmentPath $fragments {@link Segment::fragments}
 * @property-read End $voteStk {@link Segment::voteStk}
 * @property-read End $votePla {@link Segment::votePla}
 * @property-read GdprConsentPath $gdprConsent {@link Segment::gdprConsent}
 * @property-read End $submitType {@link Segment::submitType}
 * @property-read UserPath $assignee {@link Segment::assignee}
 * @property-read StatementPath $headStatement {@link Segment::headStatement}
 * @property-read StatementPath $cluster {@link Segment::cluster}
 * @property-read End $manual {@link Segment::manual}
 * @property-read End $clusterStatement {@link Segment::clusterStatement}
 * @property-read StatementPath $placeholderStatement {@link Segment::placeholderStatement}
 * @property-read StatementPath $movedStatement {@link Segment::movedStatement}
 * @property-read End $name {@link Segment::name}
 * @property-read End $replied {@link Segment::replied}
 * @property-read End $draftsListJson {@link Segment::draftsListJson}
 * @property-read SegmentPath $segmentsOfStatement {@link Segment::segmentsOfStatement}
 * @property-read StatementAttachmentPath $attachments {@link Segment::attachments}
 */
class SegmentPath implements PropertyAutoPathInterface
{
	use PropertyAutoPathTrait;
}
