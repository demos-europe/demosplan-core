# Read the documentation: https://github.com/FriendsOfSymfony/FOSElasticaBundle/blob/master/doc/setup.md
fos_elastica:
    clients:
        default:
            connections: '%elasticsearch_urls%'
            connection_strategy: RoundRobin
    indexes:
        statementSegments:
            index_name: '%project_prefix%_segments'
            settings:
                number_of_shards: "%elasticsearch_number_of_shards%"
                number_of_replicas: "%elasticsearch_number_of_replicas%"
                analysis:
                    char_filter:
                        remove_filename_extension:
                            type: pattern_replace
                            pattern: "[.].*"
                            replacement:
                    filter:
                        stop_german:
                            type: stop
                            stopwords: _german_
                        stemmer_german:
                            type: "stemmer"
                            language: "light_german"
                        icu_filter:
                            type: icu_collation
                            language: de
                            country: DE
                        min_length_filter:
                            type: length
                            min: 2
                    tokenizer:
                        split_word_separators:
                            type: pattern
                            pattern: "[ _-]"
                    analyzer:
                        customHTMLGerman:
                            type: custom
                            char_filter:
                                - html_strip
                            tokenizer: standard
                            filter:
                                - trim
                                - min_length_filter
                                - lowercase
                                - stop_german
                                - german_normalization
                                - stemmer_german
                                - unique
                                - asciifolding
            types:
                statementSegment:
                    properties:
                        id: {type: keyword, index: true}
                        externId: {type: text, index: true}
                        meta:
                            type: nested
                            include_in_parent: true
                            properties:
                                orgaName: { type: text, index: true }
                                orgaDepartmentName: { type: text, index: true }
                                orgaCity: { type: text, index: true }
                                orgaPostalCode: { type: text, index: true }
                                orgaStreet: { type: text, index: true }
                                authorName: { type: text, index: true }
                        orgaPostalCode: { type: text, index: true }
                        parentStatement.procedure.id: {type: keyword, index: true}
                        parentStatement.meta.orgaName: { type: text, index: true }
                        parentStatement.meta.orgaDepartmentName: { type: text, index: true }
                        parentStatement.meta.orgaCity: { type: text, index: true }
                        parentStatement.meta.orgaPostalCode: { type: text, index: true }
                        parentStatement.meta.orgaStreet: { type: text, index: true }
                        parentStatement.meta.submitName: { type: text, index: true }
                        parentStatement.externId: { type: text, index: true }
                        parentStatement.internId: { type: text, index: true }
                        parentStatement.memo: { type: text, index: true }
                        text:
                            type: text
                            fields:
                                text: {type: text, analyzer: customHTMLGerman}
                        recommendation:
                            type: text
                            fields:
                                text: { type: text, analyzer: customHTMLGerman }
                        tags:
                            type: nested
                            properties:
                                id: {type: keyword, index: true}
                                title: { type: text, index: false }
                                name: { type: text, index: false }
                                topicTitle: { type: text, index: false }
                        tagIds: { type: keyword, index: true }
                        assignee:
                            type: nested
                            properties:
                                id: { type: keyword, index: true }
                                firstname: { type: text, index: false }
                                lastname: { type: text, index: false }
                        assigneeId: { type: keyword, index: true }
                        tagNames:
                            type: text
                            fields:
                                text: {type: text, analyzer: customHTMLGerman }
                                raw: { type: keyword, index: true }
                        placeId: {type: keyword, index: true}
                    # define callback to check whether entity should be indexed
                    indexable_callback: 'shouldBeIndexed'
                    persistence:
                        driver: orm
                        model: demosplan\plugins\workflow\SegmentsManager\Entity\Segment
                        model_to_elastica_transformer:
                            service: path_based_model_to_elastica_transformer
                        provider: ~
                        listener: { enabled: false }
                        finder: ~

        procedures:
            index_name: '%project_prefix%_procedures'
            settings:
                number_of_shards: "%elasticsearch_number_of_shards%"
                number_of_replicas: "%elasticsearch_number_of_replicas%"
                analysis:
                    filter:
                        stop_german:
                            type: stop
                            stopwords: _german_
                        stemmer_german:
                            type: "stemmer"
                            language: "light_german"
                        icu_filter:
                            type: icu_collation
                            language: de
                            country: DE
                        min_length_filter:
                            type: length
                            min: 3
                    analyzer:
                        customHTMLGerman:
                            type: custom
                            char_filter:
                                - html_strip
                            tokenizer: standard
                            filter:
                                - trim
                                - min_length_filter
                                - lowercase
                                - stop_german
                                - german_normalization
                                - stemmer_german
                                - unique
                                - asciifolding
                        ducet_sort:
                            tokenizer: keyword
                            filter:
                                - icu_filter
            types:
                procedure:
                    properties:
                        name:
                            type: text
                            fields:
                                raw: {type: keyword, index: true}
                                rawSort: {type: icu_collation_keyword}
                                text: {type: text, analyzer: customHTMLGerman}
                        orgaName:
                            type: text
                            fields:
                                raw: {type: keyword, index: true}
                                rawSort: {type: icu_collation_keyword}
                                text: {type: text, analyzer: customHTMLGerman}
                        orgaId: {type: keyword, index: true}
                        phase: {type: keyword, index: true}
                        phasePermissionset: {type: keyword, index: true}
                        startDate: {type: keyword, index: true}
                        startDateTimestamp: {type: long, index: true}
                        endDate: {type: keyword, index: true}
                        endDateTimestamp: {type: long, index: true}
                        publicParticipationPhase: {type: keyword, index: true}
                        publicParticipationPhasePermissionset: {type: keyword, index: true}
                        publicParticipationStartDate: {type: keyword, index: true}
                        publicParticipationStartDateTimestamp: {type: long, index: true}
                        publicParticipationEndDate: {type: keyword, index: true}
                        publicParticipationEndDateTimestamp: {type: long, index: true}
                        publicParticipationContact: {type: text, index: true}
                        publicParticipationPublicationEnabled: { type: boolean }
                        pictogram: {type: keyword, index: false}
                        municipalCode: {type: keyword, index: true}
                        ars: {type: keyword, index: true}
                        planningArea: {type: text, index: true}
                        procedureCategoryNames: {type: keyword, index: true }
                        subdomain: {type: keyword, index: true}
                        authorizedUserIds: {type: keyword, index: true}
                        planningOfficesIds:
                            type: text
                            fields:
                                raw: {type: keyword, index: true }
                        externalName:
                            type: text
                            fields:
                                raw: {type: keyword, index: true}
                                rawSort: {type: icu_collation_keyword}
                                text: {type: text, analyzer: customHTMLGerman}
                        externalDesc: {type: text, index: true}
                        locationName:
                            type: text
                            fields:
                                text: {type: text, analyzer: customHTMLGerman}
                                raw: {type: keyword, index: true}
                        locationPostCode:
                            type: text
                            fields:
                                raw: {type: keyword, index: true}
                        deleted: {type: boolean }
                        master: {type: boolean }
                        organisationIds: {type: keyword, index: true}
                        coordinate: {type: text, index: true}
                        legalNotice: {type: text, index: false}
                        participationGuestOnly: { type: boolean }
                    # define callback to check whether entity should be indexed
                    indexable_callback: 'shouldBeIndexed'
                    persistence:
                        driver: orm
                        model: demosplan\DemosPlanCoreBundle\Entity\Procedure\Procedure
                        provider: ~
                        listener: ~
                        finder: ~
        draftStatements:
            index_name: '%project_prefix%_draft_statements'
            settings:
                number_of_shards: "%elasticsearch_number_of_shards%"
                number_of_replicas: "%elasticsearch_number_of_replicas%"
                analysis:
                    filter:
                        stop_german:
                            type: stop
                            stopwords: _german_
                        stemmer_german:
                            type: "stemmer"
                            language: "light_german"
                        icu_filter:
                            type: icu_collation
                            language: de
                            country: DE
                        min_length_filter:
                            type: length
                            min: 2
                    analyzer:
                        customHTMLGerman:
                            type: custom
                            char_filter:
                                - html_strip
                            tokenizer: standard
                            filter:
                                - trim
                                - min_length_filter
                                - lowercase
                                - stop_german
                                - german_normalization
                                - stemmer_german
                                - unique
                                - asciifolding
            types:
                draftStatement:
                    properties:
                        text:
                            type: text
                            fields:
                                raw: {type: text, index: false}
                        oId: {type: keyword, index: true}
                        oName:
                            type: text
                            fields:
                                text: {type: text, analyzer: customHTMLGerman}
                                raw: {type: keyword, index: true}
                                sort:  {type: icu_collation_keyword}
                        oGatewayName: {type: keyword, index: true}
                        dId: {type: keyword, index: true}
                        pId: {type: keyword, index: true}
                        uId: {type: keyword, index: true}
                        elementId: {type: keyword, index: true}
                        deleted: {type: boolean }
                        released: {type: boolean }
                        submitted: {type: boolean }
                        showToAll: {type: boolean }
                    # define callback to check whether entity should be indexed
                    indexable_callback: 'shouldBeIndexed'
                    persistence:
                        driver: orm
                        model: demosplan\DemosPlanCoreBundle\Entity\Statement\DraftStatement
                        provider: ~
                        listener: ~
                        finder: ~
        statements:
            index_name: '%project_prefix%_statements'
            settings:
                number_of_shards: "%elasticsearch_number_of_shards%"
                number_of_replicas: "%elasticsearch_number_of_replicas%"
                analysis:
                    char_filter:
                        remove_filename_extension:
                            type: pattern_replace
                            pattern: "[.].*"
                            replacement:
                    filter:
                        stop_german:
                            type: stop
                            stopwords: _german_
                        stemmer_german:
                            type: "stemmer"
                            language: "light_german"
                        icu_filter:
                            type: icu_collation
                            language: de
                            country: DE
                        min_length_filter:
                            type: length
                            min: 2
                    tokenizer:
                        split_word_separators:
                            type: pattern
                            pattern: "[ _-]"
                    analyzer:
                        customHTMLGerman:
                            type: custom
                            char_filter:
                                - html_strip
                            tokenizer: standard
                            filter:
                                - trim
                                - min_length_filter
                                - lowercase
                                - stop_german
                                - german_normalization
                                - stemmer_german
                                - unique
                                - asciifolding
            types:
                statement:
                    properties:
                        text:
                            type: text
                            fields:
                                text: {type: text, analyzer: customHTMLGerman }
                        textShort: {type: keyword, index: false}
                        recommendation:
                            type: text
                            fields:
                                text: {type: text, analyzer: customHTMLGerman}
                        recommendationShort: {type: text}
                        id: {type: keyword, index: true}
                        ident: {type: keyword, index: true}
                        name:
                            type: text
                            fields:
                                text: {type: text }
                                raw: {type: keyword, index: true }
                        oId: {type: keyword, index: true}
                        oName:
                            type: text
                            fields:
                                raw: {type: keyword, index: true}
                                sort:  {type: icu_collation_keyword}
                        dName:
                            type: text
                            fields:
                                raw: {type: keyword, index: true}
                                sort:  {type: icu_collation_keyword}
                        uName:
                            type: text
                            fields:
                                raw: {type: keyword, index: true}
                                sort:  {type: icu_collation_keyword}
                        uId: {type: keyword, index: true}
                        pId: {type: keyword, index: true}
                        organisation:
                            type: nested
                            properties:
                                street: { type: keyword, index: false }
                                houseNumber: { type: keyword, index: false }
                                postalCode: { type: keyword, index: false }
                                city: { type: keyword, index: false }
                        procedureId: {type: keyword, index: true}
                        phase: {type: keyword, index: true}
                        polygon: {type: text, index: true}
                        file: {type: keyword, index: true}
                        files: {type: text, index: true}
                        fileNames: {type: text, index: true}
                        mapFile: {type: keyword, index: true}
                        movedStatementId: {type: keyword, index: true}
                        movedToProcedureId: {type: keyword, index: true}
                        movedFromProcedureId: {type: keyword, index: true}
                        movedToProcedureName: {type: text, index: true}
                        movedFromProcedureName: {type: text, index: true}
                        isPlaceholder: {type: boolean, index: true}
                        formerExternId: {type: keyword, index: true}
                        status: {type: keyword, index: true}
                        publicStatement: {type: keyword, index: true}
                        publicCheck: {type: keyword, index: true}
                        publicAllowed: {type: boolean, index: true}
                        publicVerified: {type: keyword, index: true}
                        publicVerifiedTranslation: {type: keyword, index: true}
                        priority: {type: keyword, index: true}
                        prioritySort: {type: keyword, index: true}
                        elementId: {type: keyword, index: true}
                        elementTitle:
                            type: text
                            fields:
                                text: {type: text, analyzer: customHTMLGerman }
                                raw: {type: keyword, index: true }
                                sort:  {type: icu_collation_keyword}
                        elementCategory: {type: text, index: true}
                        elementOrder: {type: integer}
                        documentHash: {type: keyword, index: true}
                        documentId: {type: keyword, index: true}
                        documentParentId: {type: keyword, index: true}
                        documentTitle:
                            type: text
                            fields:
                                text: {type: text, analyzer: customHTMLGerman }
                                raw: {type: keyword, index: true }
                                sort:  {type: icu_collation_keyword}
                        paragraphId: {type: keyword, index: true}
                        paragraphParentId: {type: keyword, index: true}
                        paragraphParentTitle: {type: text, index: false}
                        paragraphOrder: {type: integer }
                        paragraphTitle:
                            type: text
                            fields:
                                title: {type: text, index: true}
                                text: {type: text, analyzer: customHTMLGerman }
                                raw: {type: keyword, index: true }
                                sort:  {type: icu_collation_keyword}
                                # sort : { type : string, analyzer : naturalsort }

                        originalId: {type: keyword, index: true}
                        parentId: {type: keyword, index: true}
                        priorityAreaKeys: {type: keyword, index: true}
                        municipalityNames:
                            type: text
                            fields:
                                raw: {type: keyword, index: true }
                        countyNames:
                            type: text
                            fields:
                                raw: {type: keyword, index: true }
                        tags:
                            type: nested
                            properties:
                                id:  {type: keyword, index: false}
                                title: {type: text, index: false}
                                name: {type: text, index: false}
                                topicTitle: {type: text, index: false}
                        tagNames:
                            type: text
                            fields:
                                text: {type: text, analyzer: customHTMLGerman }
                                raw: {type: keyword, index: true }
                        topicNames:
                            type: text
                            fields:
                                text: {type: text, analyzer: customHTMLGerman }
                                raw: {type: keyword, index: true }
                        externId: {type: keyword, index: true}
                        internId: {type: keyword, index: true}
                        memo: {type: text}
                        type: {type: keyword, index: true}
                        submitObject: {type: date, index: true, format: "yyyy-MM-dd'T'HH:mm:ssZZ" }
                        submitDateString: {type: keyword, index: true}
                        submit: {type: long, index: true } # Timestamp für die Sortierung. Müsste auch über date gehen, tuts aber gerade nicht
                        submitType: {type: keyword, index: true}
                        submitTypeTranslated: {type: keyword, index: true}
                        deleted: {type: boolean }
                        consented: {type: boolean }
                        consentRevoked: {type: boolean }
                        headStatementId: {type: keyword, index: true}
                        isClusterStatement: { type: boolean }
                        votesNum: { type: integer, null_value: 0 }
                        voteStk: {type: keyword, index: true}
                        votePla: {type: keyword, index: true}
                        likesNum: { type: integer, null_value: 0 }
                        replied: {type: boolean, index: false}
                        cluster:
                            type: nested
                            include_in_parent: true
                            properties:
                                id: {type: keyword, index: false}
                                authoredDate: {type: text, index: false}
                                submit: {type: text, index: false}
                                externId: {type: keyword, index: true}
                                priority: {type: keyword, index: false}
                                publicStatement: {type: keyword, index: false}
                                status: {type: keyword, index: false}
                                oName:
                                    type: text
                                    fields:
                                        searchable: {type: text, analyzer: customHTMLGerman}
                                        raw: {type: keyword, index: true}
                                        sort: {type: icu_collation_keyword}
                                dName:
                                    type: text
                                    fields:
                                        raw: {type: keyword, index: true}
                                        sort:  {type: icu_collation_keyword}
                                uName:
                                    type: text
                                    fields:
                                        raw: {type: keyword, index: true}
                                        sort:  {type: icu_collation_keyword}
                        assignee:
                            include_in_parent: true
                            type: nested
                            properties:
                                uId: {type: keyword, index: true}
                                id: {type: keyword, index: true}
                                name: {type: text, index: false}
                                orgaName: {type: text, index: false}
                        meta:
                            type: nested
                            include_in_parent: true
                            properties:
                                orgaName: {type: text, index: true}
                                orgaDepartmentName: {type: text, index: true}
                                orgaCity: {type: text, index: true}
                                orgaStreet: {type: text, index: false}
                                houseNumber: {type: text, index: false}
                                orgaPostalCode: {type: text, index: true}
                                orgaEmail: {type: text, index: false}
                                authorName: {type: text, index: true}
                                authoredDate: {type: long, index: false}
                                submitName:
                                    type: text
                                    fields:
                                        raw: {type: keyword, index: true}
                                        sort:  {type: icu_collation_keyword}
                                submitLastName: {type: text, index: true}
                                submitUId: {type: keyword, index: true}
                                caseWorkerName:
                                    type: text
                                    fields:
                                        raw: {type: keyword, index: true}
                                caseWorkerLastName: {type: text, index: true}
                                # specific project variables
                                userGroup: {type: keyword, index: true }
                                userPosition: {type: keyword, index: true }
                                userOrganisation: {type: keyword, index: true }
                                userState: {type: keyword, index: true }
                        votes:
                            type: nested
                            include_in_parent: true
                            properties:
                                uId: {type: keyword, index: true}
                                firstName: {type: text, index: true}
                                lastName: {type: text, index: true}
                        attachmentsDeleted: { type: boolean, index: false }
                        submitterAndAuthorMetaDataAnonymized: { type: boolean, index: false }
                        textPassagesAnonymized: { type: boolean, index: false }
                        isSubmittedByCitizen: { type: boolean, index: false }
                        anonymous: { type: boolean, index: false }
                        fragments:
                            type: nested
                            include_in_parent: true
                            properties:
                                id: {type: keyword, index: true}
                                displayId:
                                    type: text
                                    fields:
                                        sort:  {type: icu_collation_keyword}
                                tags:
                                    type: nested
                                    properties:
                                        title: {type: text, index: true}
                                        name: {type: text, index: true}
                                        id:  {type: keyword, index: true}
                                        topicTitle: {type: text, index: true}
                                procedureId: {type: keyword, index: true}
                                procedureName:
                                    type: text
                                    fields:
                                        raw: {type: keyword, index: true }
                                departmentId: {type: keyword, index: true}
                                statementId: {type: keyword, index: true}
                                documentParentId: {type: keyword, index: true}
                                document:
                                    type: nested
                                    properties:
                                        id: {type: keyword, index: true}
                                        title: {type: keyword, index: true}
                                archivedDepartmentId: {type: keyword, index: true}
                                archivedOrgaName: {type: text, index: true}
                                archivedDepartmentName: {type: text, index: true}
                                archivedVoteUserName: {type: text, index: true}
                                assignee:
                                    type: nested
                                    properties:
                                        uId: {type: keyword, index: true}
                                        id: {type: keyword, index: true}
                                        name: {type: text}
                                        orgaName: {type: text}
                                priorityAreas:
                                    type: nested
                                    properties:
                                        key: {type: text, index: true}
                                        id: {type: keyword, index: true}
                                municipalities:
                                    type: nested
                                    properties:
                                        name: {type: text, index: true}
                                        id: {type: keyword, index: true}
                                counties:
                                    type: nested
                                    properties:
                                        name: {type: text, index: true}
                                        id: {type: keyword, index: true}
                                priorityAreaKeys: {type: keyword, index: true}
                                municipalityNames:
                                    type: text
                                    fields:
                                        text: {type: text, index: true}
                                        raw: {type: keyword, index: true}
                                countyNames:
                                    type: text
                                    fields:
                                        text: {type: text, index: true}
                                        raw: {type: keyword, index: true}
                                considerationAdvice:
                                    type: text
                                    fields:
                                        text: {type: text, analyzer: customHTMLGerman}
                                voteAdvice: {type: keyword, index: true}
                                vote: {type: keyword, index: true}
                                created: {type: keyword, index: true } # Timestamp für die Sortierung. Müsste auch über date gehen, tuts aber gerade nicht
                                status: {type: keyword, index: true}
                                lastClaimedUserId: {type: keyword, index: true}
                                elementId: {type: keyword, index: true}
                                elementTitle:
                                    type: text
                                    fields:
                                        text: {type: text, analyzer: customHTMLGerman }
                                        raw: {type: keyword, index: true }
                                        sort:  {type: icu_collation_keyword}
                                elementCategory: {type: text, index: true}
                                elementOrder: {type: integer}
                                paragraphId: {type: keyword, index: true}
                                paragraphParentId: {type: keyword, index: true}
                                paragraphOrder: {type: integer }
                                paragraphTitle:
                                    type: text
                                    fields :
                                        title: {type: text, index: true}
                                        text: {type: text, analyzer: customHTMLGerman }
                                        raw: {type: keyword, index: true }
                                        sort:  {type: icu_collation_keyword}
                                        # sort : { type : string, analyzer : naturalsort }
                                sortIndex: {type: integer, index: false}

                    # define callback to check whether entity should be indexed
                    indexable_callback: 'shouldBeIndexed'
                    persistence:
                        driver: orm
                        model: demosplan\DemosPlanCoreBundle\Entity\Statement\Statement
                        provider: ~
                        listener: { enabled: false }
                        finder: ~
        statementFragments:
            index_name: '%project_prefix%_statement_fragments'
            settings:
                number_of_shards: "%elasticsearch_number_of_shards%"
                number_of_replicas: "%elasticsearch_number_of_replicas%"
                analysis:
                    char_filter:
                        remove_filename_extension:
                            type: pattern_replace
                            pattern: "[.].*"
                            replacement:
                    filter:
                        stop_german:
                            type: stop
                            stopwords: _german_
                        stemmer_german:
                            type: "stemmer"
                            language: "light_german"
                        icu_filter:
                            type: icu_collation
                            language: de
                            country: DE
                        min_length_filter:
                            type: length
                            min: 2
                    tokenizer:
                        split_word_separators:
                            type: pattern
                            pattern: "[ _-]"
                    analyzer:
                        customHTMLGerman:
                            type: custom
                            char_filter:
                                - html_strip
                            tokenizer: standard
                            filter:
                                - trim
                                - min_length_filter
                                - lowercase
                                - stop_german
                                - german_normalization
                                - stemmer_german
                                - unique
                                - asciifolding
                        ducet_sort:
                            tokenizer: keyword
                            filter:
                                - icu_filter
                        file_name:
                            type: custom
                            char_filter: remove_filename_extension
                            tokenizer: split_word_separators
                            filter: lowercase
            types:
                statementFragment:
                    properties:
                        id: {type: keyword, index: true}
                        displayId:
                            type: text
                            fields:
                                sort:  {type: icu_collation_keyword}
                        text:
                            type: text
                            fields:
                                text: {type: text, analyzer: customHTMLGerman }
                        tags:
                            type: nested
                            properties:
                                id:  {type: keyword, index: true}
                                title: {type: text, index: true}
                                name: {type: text, index: true}
                                topicTitle: {type: text, index: true}
                        procedureId: {type: keyword, index: true}
                        procedureName: {type: keyword, index: true}
                        departmentId: {type: keyword, index: true}
                        statementId: {type: keyword, index: true}
                        statement:
                            type: nested
                            include_in_parent: true
                            properties:
                                id: {type: keyword, index: true}
                                externId: {type: text, index: true}
                                tags:
                                    type: nested
                                    properties:
                                        title: {type: text, index: true}
                                        name: {type: text, index: true}
                                        topicTitle: {type: text, index: true}
                                municipalities:
                                    type: nested
                                    properties:
                                        name: {type: text, index: true}
                                        id: {type: keyword, index: true}
                                priorityAreas:
                                    type: nested
                                    properties:
                                        key: {type: text, index: true}
                                        id: {type: keyword, index: true}
                                counties:
                                    type: nested
                                    properties:
                                        name: {type: text, index: true}
                                        id: {type: keyword, index: true}
                                elementTitle:
                                    type: text
                                    fields:
                                        text: {type: text, analyzer: customHTMLGerman }
                                        raw: {type: keyword, index: true }
                                        sort:  {type: icu_collation_keyword}
                                elementCategory: {type: text, index: true}
                                elementId: {type: keyword, index: true}
                                isClusterStatement: { type: boolean }
                                paragraphTitle: {type: text, index: true}
                                paragraphId: {type: keyword, index: true}
                                publicStatement: {type: keyword, index: true}
                                text: {type: text, index: false}
                                textShort: {type: text}
                                files:
                                    type: text
                                    fields:
                                        text: {type: text, index: true}
                                        filename: {type: text, analyzer: file_name}
                                headStatementId: {type: keyword, index: true}
                                originalId: {type: keyword, index: true}
                                meta:
                                    type: nested
                                    include_in_parent: true
                                    properties:
                                        orgaName: {type: keyword, index: true}
                                        orgaDepartmentName: {type: keyword, index: true}
                                        submitName: {type: keyword, index: true}
                                        authorName: {type: keyword, index: true}
                        archivedOrgaName: {type: text, index: true}
                        archivedDepartmentId: {type: keyword, index: true}
                        archivedDepartmentName: {type: text, index: true}
                        archivedVoteUserName: {type: text, index: true}
                        assignee:
                            type: nested
                            properties:
                                uId: {type: keyword, index: true}
                                id: {type: keyword, index: true}
                                name: {type: text, index: true}
                                orgaName: {type: text, index: true}
                        priorityAreas:
                            type: nested
                            properties:
                                key: {type: text, index: true}
                                id: {type: keyword, index: true}
                        municipalities:
                            type: nested
                            properties:
                                name: {type: text, index: true}
                                id: {type: keyword, index: true}
                        counties:
                            type: nested
                            properties:
                                name: {type: text, index: true}
                                id: {type: keyword, index: true}
                        priorityAreaKeys: {type: keyword, index: true}
                        municipalityNames:
                            type: text
                            fields:
                                text: {type: text }
                                raw: {type: keyword, index: true }
                        countyNames:
                            type: text
                            fields:
                                text: {type: text }
                                raw: {type: keyword, index: true }
                        tagNames:
                            type: text
                            fields:
                                text: {type: text, analyzer: customHTMLGerman }
                                raw: {type: keyword, index: true }
                        considerationAdvice: {type: text}
                        consideration:
                            type: text
                            fields:
                                text: {type: text, analyzer: customHTMLGerman }
                        versions:
                            type: nested
                            include_in_parent: true
                            properties:
                                id: {type: keyword, index: true}
                                created: {type: keyword, index: true } # Timestamp für die Sortierung. Müsste auch über date gehen, tuts aber gerade nicht
                                consideration: {type: text}
                                considerationAdvice: {type: text}
                                countyNamesAsJson: {type: text, index: true}
                                documentParentId: {type: keyword, index: true}
                                document:
                                    type: nested
                                    properties:
                                        id: {type: keyword, index: true}
                                        title: {type: keyword, index: true}
                                elementCategory: {type: text, index: false}
                                elementTitle:
                                    type: text
                                    fields:
                                        text: {type: text, analyzer: customHTMLGerman }
                                        raw: {type: keyword, index: true }
                                        sort:  {type: icu_collation_keyword}
                                modifiedByUserId: {type: keyword, index: true}
                                modifiedByDepartmentId: {type: keyword, index: true}
                                municipalityNamesAsJson: {type: text, index: true}
                                paragraphTitle: {type: text, index: false}
                                priorityAreaNamesAsJson: {type: text, index: true}
                                tagAndTopicNames: {type: text, index: true}
                                text: {type: text, index: false}
                                vote: {type: keyword, index: true}
                                voteAdvice: {type: keyword, index: true}
                        voteAdvice: {type: keyword, index: true}
                        vote: {type: keyword, index: true}
                        created: {type: keyword, index: true } # Timestamp für die Sortierung. Müsste auch über date gehen, tuts aber gerade nicht
                        modifiedByUserId: {type: keyword, index: true}
                        modifiedByDepartmentId: {type: keyword, index: true}
                        assignedToFbDate: {type: date, index: true}
                        status: {type: keyword, index: true}
                        lastClaimedUserId: {type: keyword, index: true}
                        elementId: {type: keyword, index: true}
                        documentParentId: {type: keyword, index: true}
                        document:
                            type: nested
                            properties:
                                id: {type: keyword, index: true}
                                title: {type: keyword, index: true}
                        elementTitle:
                            type: text
                            fields:
                                text: {type: text, analyzer: customHTMLGerman }
                                raw: {type: keyword, index: true }
                                sort:  {type: icu_collation_keyword}
                        elementCategory: {type: text, index: true}
                        elementOrder: {type: integer}
                        paragraphId: {type: keyword, index: true}
                        paragraphParentId: {type: keyword, index: true}
                        paragraphParentTitle: {type: text, index: true}
                        paragraphOrder: {type: integer }
                        paragraphTitle:
                            type: text
                            fields :
                                title: {type: text, index: true}
                                text: {type: text, analyzer: customHTMLGerman }
                                raw: {type: keyword, index: true }
                                sort:  {type: icu_collation_keyword}
                                # sort : { type : string, analyzer : naturalsort }
                        sortIndex: {type: integer, index: false}
                    # define callback to check whether entity should be indexed
                    indexable_callback: 'shouldBeIndexed'
                    persistence:
                        driver: orm
                        model: demosplan\DemosPlanCoreBundle\Entity\Statement\StatementFragment
                        provider: ~
                        listener: { enabled: false }
                        finder: ~
        users:
            index_name: '%project_prefix%_users'
            settings:
                number_of_shards: "%elasticsearch_number_of_shards%"
                number_of_replicas: "%elasticsearch_number_of_replicas%"
            types:
                user:
                    properties:
                        id: {type: keyword, index: true}
                        name:
                            type: text
                            fields:
                                raw: {type: keyword, index: true}
                                text: {type: text, index: true}
                        lastname: {type: keyword, index: true}
                        orga.name:
                            type: text
                            fields:
                                raw: {type: keyword, index: true}
                                text: {type: text}
                        email:
                            type: text
                            fields:
                                raw: {type: keyword, index: true}
                                text: {type: text, index: true}
                        departmentName:
                            type: text
                            fields:
                                raw: {type: keyword, index: true}
                                text: {type: text}
                        roles: {type: keyword}
                        customers: {type: keyword}
                        deleted: {type: boolean }
                    # define callback to check whether entity should be indexed
                    indexable_callback: 'shouldBeIndexed'
                    persistence:
                        driver: orm
                        model: demosplan\DemosPlanCoreBundle\Entity\User\User
                        model_to_elastica_transformer:
                            service: path_based_model_to_elastica_transformer
                        provider: ~
                        listener: ~
                        finder: ~
