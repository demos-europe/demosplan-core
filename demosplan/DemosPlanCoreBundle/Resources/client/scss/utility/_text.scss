//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//  (c) 2010-present DEMOS plan GmbH.
//
//  This file is part of the package demosplan,
//  for more information see the license file.
//
//  All rights reserved
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

@use 'sass:list';

//  utility classes affecting text
//
//  .fontstyle--[normal|italic]
//  .line-height--1_6
//  .text-decoration-[none|underline]
//  .[text|align]--[left|center|right|justify]{--[palm|desktop]}
//  .weight--[normal|bold]
//  .whitespace--[normal|nowrap]
//  .line-clamp-3

//  line height
.line-height {
    &--inherit {
        line-height: inherit !important;
    }

    &--0 {
        line-height: 0 !important;
    }

    &--1 {
        line-height: 1 !important;
    }

    &--1_2 {
        line-height: 1.2 !important;
    }

    &--1_4 {
        line-height: 1.4 !important;
    }

    &--1_6 {
        line-height: 1.6 !important;
    }

    &--2 {
        line-height: 2 !important;
    }
}

//  alignment
$text-directions: (
    'left',
    'center',
    'right',
    'justify'
);

@each $direction in $text-directions {

    // Loop over breakpoints defined in _settings.responsive.scss
    @each $breakpoint in $breakpoints {

        // Get the name of the breakpoint.
        $alias: list.nth($breakpoint, 1);

        @include media-query($alias) {

            .text-#{$direction}-#{$alias} {
                text-align: #{$direction} !important;
            }
        }
    }
}


//  font-weight
.weight,
%weight {
    &--normal {
        font-weight: $normal-font-weight !important;
        font-family: $normal-font-family !important;
    }

    &--bold {
        font-weight: $bold-font-weight !important;
        font-family: $bold-font-family !important;
    }
}

.whitespace {
    &--normal {
        white-space: normal !important;
    }

    &--nowrap {
        white-space: nowrap;
    }

    &--preline {
        white-space: pre-line;
    }
}

.line-clamp-3 {
    // Base line-height is derived from $inuit-base-spacing-unit,
    // so this sets max-height to 3 lines of text.
    max-height: calc(#{$inuit-base-spacing-unit} * 3);
    overflow-y: hidden;

    // Remove spacing of child elements to make max-height fit 3 lines of text.
    & * {
        margin: 0;
        padding: 0;
    }
}
