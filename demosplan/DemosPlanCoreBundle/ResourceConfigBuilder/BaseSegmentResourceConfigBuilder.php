<?php

declare(strict_types=1);

namespace demosplan\DemosPlanCoreBundle\ResourceConfigBuilder;

use EDT\DqlQuerying\Contracts\ClauseFunctionInterface;
use EDT\DqlQuerying\Contracts\OrderBySortMethodInterface;
use EDT\JsonApi\PropertyConfig\Builder\AttributeConfigBuilderInterface;
use EDT\JsonApi\PropertyConfig\Builder\ToManyRelationshipConfigBuilderInterface;
use EDT\JsonApi\PropertyConfig\Builder\ToOneRelationshipConfigBuilderInterface;
use EDT\JsonApi\ResourceConfig\Builder\MagicResourceConfigBuilder;
use demosplan\DemosPlanCoreBundle\Entity\Document\Elements;
use demosplan\DemosPlanCoreBundle\Entity\Document\ParagraphVersion;
use demosplan\DemosPlanCoreBundle\Entity\Document\SingleDocumentVersion;
use demosplan\DemosPlanCoreBundle\Entity\OriginalStatementAnonymization;
use demosplan\DemosPlanCoreBundle\Entity\Procedure\Procedure;
use demosplan\DemosPlanCoreBundle\Entity\Statement\County;
use demosplan\DemosPlanCoreBundle\Entity\Statement\DraftStatement;
use demosplan\DemosPlanCoreBundle\Entity\Statement\GdprConsent;
use demosplan\DemosPlanCoreBundle\Entity\Statement\Municipality;
use demosplan\DemosPlanCoreBundle\Entity\Statement\PriorityArea;
use demosplan\DemosPlanCoreBundle\Entity\Statement\Segment;
use demosplan\DemosPlanCoreBundle\Entity\Statement\SegmentComment;
use demosplan\DemosPlanCoreBundle\Entity\Statement\Statement;
use demosplan\DemosPlanCoreBundle\Entity\Statement\StatementAttribute;
use demosplan\DemosPlanCoreBundle\Entity\Statement\StatementFragment;
use demosplan\DemosPlanCoreBundle\Entity\Statement\StatementLike;
use demosplan\DemosPlanCoreBundle\Entity\Statement\StatementMeta;
use demosplan\DemosPlanCoreBundle\Entity\Statement\StatementVersionField;
use demosplan\DemosPlanCoreBundle\Entity\Statement\StatementVote;
use demosplan\DemosPlanCoreBundle\Entity\Statement\Tag;
use demosplan\DemosPlanCoreBundle\Entity\StatementAttachment;
use demosplan\DemosPlanCoreBundle\Entity\User\Orga;
use demosplan\DemosPlanCoreBundle\Entity\User\User;
use demosplan\DemosPlanCoreBundle\Entity\Workflow\Place;

/**
 * WARNING: THIS CLASS IS AUTOGENERATED.
 * MANUAL CHANGES WILL BE LOST ON RE-GENERATION.
 *
 * To add additional properties, you may want to
 * create an extending class and add them there.
 *
 * @template-extends MagicResourceConfigBuilder<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,Segment>
 *
 * @property-read ToOneRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,Segment,Statement> $parentStatementOfSegment {@link Segment::parentStatementOfSegment}
 * @property-read ToManyRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,Segment,SegmentComment> $comments {@link Segment::comments}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Segment> $orderInProcedure {@link Segment::orderInProcedure}
 * @property-read ToOneRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,Segment,Place> $place {@link Segment::place}
 * @property-read ToOneRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,Segment,Statement> $parent {@link Segment::parent}
 * @property-read ToManyRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,Segment,Statement> $children {@link Segment::children}
 * @property-read ToOneRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,Segment,Statement> $original {@link Segment::original}
 * @property-read ToManyRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,Segment,Statement> $statementsCreatedFromOriginal {@link Segment::statementsCreatedFromOriginal}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Segment> $priority {@link Segment::priority}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Segment> $externId {@link Segment::externId}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Segment> $internId {@link Segment::internId}
 * @property-read ToOneRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,Segment,User> $user {@link Segment::user}
 * @property-read ToOneRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,Segment,Orga> $organisation {@link Segment::organisation}
 * @property-read ToOneRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,Segment,Procedure> $procedure {@link Segment::procedure}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Segment> $represents {@link Segment::represents}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Segment> $representationCheck {@link Segment::representationCheck}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Segment> $phase {@link Segment::phase}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Segment> $status {@link Segment::status}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Segment> $created {@link Segment::created}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Segment> $modified {@link Segment::modified}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Segment> $send {@link Segment::send}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Segment> $sentAssessmentDate {@link Segment::sentAssessmentDate}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Segment> $submit {@link Segment::submit}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Segment> $deletedDate {@link Segment::deletedDate}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Segment> $deleted {@link Segment::deleted}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Segment> $negativeStatement {@link Segment::negativeStatement}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Segment> $sentAssessment {@link Segment::sentAssessment}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Segment> $publicUseName {@link Segment::publicUseName}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Segment> $publicVerified {@link Segment::publicVerified}
 * @property-read ToManyRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,Segment,OriginalStatementAnonymization> $anonymizations {@link Segment::anonymizations}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Segment> $publicStatement {@link Segment::publicStatement}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Segment> $toSendPerMail {@link Segment::toSendPerMail}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Segment> $title {@link Segment::title}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Segment> $text {@link Segment::text}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Segment> $recommendation {@link Segment::recommendation}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Segment> $memo {@link Segment::memo}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Segment> $feedback {@link Segment::feedback}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Segment> $reasonParagraph {@link Segment::reasonParagraph}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Segment> $planningDocument {@link Segment::planningDocument}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Segment> $file {@link Segment::file}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Segment> $mapFile {@link Segment::mapFile}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Segment> $countyNotified {@link Segment::countyNotified}
 * @property-read ToOneRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,Segment,ParagraphVersion> $paragraph {@link Segment::paragraph}
 * @property-read ToOneRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,Segment,SingleDocumentVersion> $document {@link Segment::document}
 * @property-read ToOneRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,Segment,Elements> $element {@link Segment::element}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Segment> $polygon {@link Segment::polygon}
 * @property-read ToOneRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,Segment,DraftStatement> $draftStatement {@link Segment::draftStatement}
 * @property-read ToOneRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,Segment,StatementMeta> $meta {@link Segment::meta}
 * @property-read ToManyRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,Segment,StatementVersionField> $version {@link Segment::version}
 * @property-read ToManyRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,Segment,StatementAttribute> $statementAttributes {@link Segment::statementAttributes}
 * @property-read ToManyRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,Segment,StatementVote> $votes {@link Segment::votes}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Segment> $numberOfAnonymVotes {@link Segment::numberOfAnonymVotes}
 * @property-read ToManyRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,Segment,StatementLike> $likes {@link Segment::likes}
 * @property-read ToManyRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,Segment,Tag> $tags {@link Segment::tags}
 * @property-read ToManyRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,Segment,County> $counties {@link Segment::counties}
 * @property-read ToManyRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,Segment,PriorityArea> $priorityAreas {@link Segment::priorityAreas}
 * @property-read ToManyRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,Segment,Municipality> $municipalities {@link Segment::municipalities}
 * @property-read ToManyRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,Segment,StatementFragment> $fragments {@link Segment::fragments}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Segment> $voteStk {@link Segment::voteStk}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Segment> $votePla {@link Segment::votePla}
 * @property-read ToOneRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,Segment,GdprConsent> $gdprConsent {@link Segment::gdprConsent}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Segment> $submitType {@link Segment::submitType}
 * @property-read ToOneRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,Segment,User> $assignee {@link Segment::assignee}
 * @property-read ToOneRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,Segment,Statement> $headStatement {@link Segment::headStatement}
 * @property-read ToManyRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,Segment,Statement> $cluster {@link Segment::cluster}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Segment> $manual {@link Segment::manual}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Segment> $clusterStatement {@link Segment::clusterStatement}
 * @property-read ToOneRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,Segment,Statement> $placeholderStatement {@link Segment::placeholderStatement}
 * @property-read ToOneRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,Segment,Statement> $movedStatement {@link Segment::movedStatement}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Segment> $name {@link Segment::name}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Segment> $replied {@link Segment::replied}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Segment> $draftsListJson {@link Segment::draftsListJson}
 * @property-read ToManyRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,Segment,Segment> $segmentsOfStatement {@link Segment::segmentsOfStatement}
 * @property-read ToManyRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,Segment,StatementAttachment> $attachments {@link Segment::attachments}
 */
class BaseSegmentResourceConfigBuilder extends MagicResourceConfigBuilder
{
}
