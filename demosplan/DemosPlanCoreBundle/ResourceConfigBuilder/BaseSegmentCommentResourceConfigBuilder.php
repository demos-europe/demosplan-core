<?php

declare(strict_types=1);

namespace demosplan\DemosPlanCoreBundle\ResourceConfigBuilder;

use EDT\DqlQuerying\Contracts\ClauseFunctionInterface;
use EDT\DqlQuerying\Contracts\OrderBySortMethodInterface;
use EDT\JsonApi\PropertyConfig\Builder\AttributeConfigBuilderInterface;
use EDT\JsonApi\PropertyConfig\Builder\ToOneRelationshipConfigBuilderInterface;
use EDT\JsonApi\ResourceConfig\Builder\MagicResourceConfigBuilder;
use demosplan\DemosPlanCoreBundle\Entity\Statement\Segment;
use demosplan\DemosPlanCoreBundle\Entity\Statement\SegmentComment;
use demosplan\DemosPlanCoreBundle\Entity\User\User;
use demosplan\DemosPlanCoreBundle\Entity\Workflow\Place;

/**
 * WARNING: THIS CLASS IS AUTOGENERATED.
 * MANUAL CHANGES WILL BE LOST ON RE-GENERATION.
 *
 * To add additional properties, you may want to
 * create an extending class and add them there.
 *
 * @template-extends MagicResourceConfigBuilder<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,SegmentComment>
 *
 * @property-read ToOneRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,SegmentComment,Segment> $segment {@link SegmentComment::segment}
 * @property-read ToOneRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,SegmentComment,User> $submitter {@link SegmentComment::submitter}
 * @property-read ToOneRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,SegmentComment,Place> $place {@link SegmentComment::place}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,SegmentComment> $creationDate {@link SegmentComment::creationDate}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,SegmentComment> $text {@link SegmentComment::text}
 */
class BaseSegmentCommentResourceConfigBuilder extends MagicResourceConfigBuilder
{
}
