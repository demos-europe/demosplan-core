<?php

declare(strict_types=1);

namespace demosplan\DemosPlanCoreBundle\ResourceConfigBuilder;

use EDT\DqlQuerying\Contracts\ClauseFunctionInterface;
use EDT\DqlQuerying\Contracts\OrderBySortMethodInterface;
use EDT\JsonApi\PropertyConfig\Builder\AttributeConfigBuilderInterface;
use EDT\JsonApi\PropertyConfig\Builder\ToManyRelationshipConfigBuilderInterface;
use EDT\JsonApi\PropertyConfig\Builder\ToOneRelationshipConfigBuilderInterface;
use EDT\JsonApi\ResourceConfig\Builder\MagicResourceConfigBuilder;
use demosplan\DemosPlanCoreBundle\Entity\Document\Elements;
use demosplan\DemosPlanCoreBundle\Entity\Document\SingleDocument;
use demosplan\DemosPlanCoreBundle\Entity\Procedure\Procedure;
use demosplan\DemosPlanCoreBundle\Entity\User\Orga;

/**
 * WARNING: THIS CLASS IS AUTOGENERATED.
 * MANUAL CHANGES WILL BE LOST ON RE-GENERATION.
 *
 * To add additional properties, you may want to
 * create an extending class and add them there.
 *
 * @template-extends MagicResourceConfigBuilder<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,Elements>
 *
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Elements> $elementParentId {@link Elements::elementParentId}
 * @property-read ToOneRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,Elements,Elements> $parent {@link Elements::parent}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Elements> $pId {@link Elements::pId}
 * @property-read ToOneRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,Elements,Procedure> $procedure {@link Elements::procedure}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Elements> $category {@link Elements::category}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Elements> $title {@link Elements::title}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Elements> $icon {@link Elements::icon}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Elements> $iconTitle {@link Elements::iconTitle}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Elements> $text {@link Elements::text}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Elements> $file {@link Elements::file}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Elements> $order {@link Elements::order}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Elements> $enabled {@link Elements::enabled}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Elements> $deleted {@link Elements::deleted}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Elements> $createDate {@link Elements::createDate}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Elements> $modifyDate {@link Elements::modifyDate}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Elements> $deleteDate {@link Elements::deleteDate}
 * @property-read ToManyRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,Elements,SingleDocument> $documents {@link Elements::documents}
 * @property-read ToManyRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,Elements,Elements> $children {@link Elements::children}
 * @property-read ToManyRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,Elements,Orga> $organisations {@link Elements::organisations}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Elements> $designatedSwitchDate {@link Elements::designatedSwitchDate}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Elements> $permission {@link Elements::permission}
 */
class BaseElementsResourceConfigBuilder extends MagicResourceConfigBuilder
{
}
