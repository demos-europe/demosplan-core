<?php

declare(strict_types=1);

/**
 * This file is part of the package demosplan.
 *
 * (c) 2010-present DEMOS plan GmbH, for more information see the license file.
 *
 * All rights reserved
 */

namespace demosplan\DemosPlanCoreBundle\ResourceConfigBuilder;

use demosplan\DemosPlanCoreBundle\Entity\Document\Elements;
use demosplan\DemosPlanCoreBundle\Entity\Document\ParagraphVersion;
use demosplan\DemosPlanCoreBundle\Entity\Document\SingleDocumentVersion;
use demosplan\DemosPlanCoreBundle\Entity\OriginalStatementAnonymization;
use demosplan\DemosPlanCoreBundle\Entity\Procedure\Procedure;
use demosplan\DemosPlanCoreBundle\Entity\Procedure\ProcedurePerson;
use demosplan\DemosPlanCoreBundle\Entity\Statement\County;
use demosplan\DemosPlanCoreBundle\Entity\Statement\DraftStatement;
use demosplan\DemosPlanCoreBundle\Entity\Statement\GdprConsent;
use demosplan\DemosPlanCoreBundle\Entity\Statement\Municipality;
use demosplan\DemosPlanCoreBundle\Entity\Statement\PriorityArea;
use demosplan\DemosPlanCoreBundle\Entity\Statement\Segment;
use demosplan\DemosPlanCoreBundle\Entity\Statement\Statement;
use demosplan\DemosPlanCoreBundle\Entity\Statement\StatementAttribute;
use demosplan\DemosPlanCoreBundle\Entity\Statement\StatementFragment;
use demosplan\DemosPlanCoreBundle\Entity\Statement\StatementLike;
use demosplan\DemosPlanCoreBundle\Entity\Statement\StatementMeta;
use demosplan\DemosPlanCoreBundle\Entity\Statement\StatementVersionField;
use demosplan\DemosPlanCoreBundle\Entity\Statement\StatementVote;
use demosplan\DemosPlanCoreBundle\Entity\Statement\Tag;
use demosplan\DemosPlanCoreBundle\Entity\StatementAttachment;
use demosplan\DemosPlanCoreBundle\Entity\User\Orga;
use demosplan\DemosPlanCoreBundle\Entity\User\User;
use EDT\DqlQuerying\Contracts\ClauseFunctionInterface;
use EDT\DqlQuerying\Contracts\OrderBySortMethodInterface;
use EDT\JsonApi\PropertyConfig\Builder\AttributeConfigBuilderInterface;
use EDT\JsonApi\PropertyConfig\Builder\ToManyRelationshipConfigBuilderInterface;
use EDT\JsonApi\PropertyConfig\Builder\ToOneRelationshipConfigBuilderInterface;
use EDT\JsonApi\ResourceConfig\Builder\MagicResourceConfigBuilder;

/**
 * WARNING: THIS CLASS IS AUTOGENERATED.
 * MANUAL CHANGES WILL BE LOST ON RE-GENERATION.
 *
 * To add additional properties, you may want to
 * create an extending class and add them there.
 *
 * @template-extends MagicResourceConfigBuilder<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,Statement>
 *
 * @property-read ToOneRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,Statement,Statement> $parent {@link Statement::parent}
 * @property-read ToManyRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,Statement,Statement> $children {@link Statement::children}
 * @property-read ToOneRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,Statement,Statement> $original {@link Statement::original}
 * @property-read ToManyRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,Statement,Statement> $statementsCreatedFromOriginal {@link Statement::statementsCreatedFromOriginal}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Statement> $priority {@link Statement::priority}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Statement> $externId {@link Statement::externId}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Statement> $internId {@link Statement::internId}
 * @property-read ToOneRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,Statement,User> $user {@link Statement::user}
 * @property-read ToOneRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,Statement,Orga> $organisation {@link Statement::organisation}
 * @property-read ToOneRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,Statement,Procedure> $procedure {@link Statement::procedure}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Statement> $represents {@link Statement::represents}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Statement> $representationCheck {@link Statement::representationCheck}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Statement> $phase {@link Statement::phase}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Statement> $status {@link Statement::status}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Statement> $created {@link Statement::created}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Statement> $modified {@link Statement::modified}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Statement> $send {@link Statement::send}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Statement> $sentAssessmentDate {@link Statement::sentAssessmentDate}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Statement> $submit {@link Statement::submit}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Statement> $deletedDate {@link Statement::deletedDate}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Statement> $deleted {@link Statement::deleted}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Statement> $negativeStatement {@link Statement::negativeStatement}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Statement> $sentAssessment {@link Statement::sentAssessment}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Statement> $publicUseName {@link Statement::publicUseName}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Statement> $publicVerified {@link Statement::publicVerified}
 * @property-read ToManyRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,Statement,OriginalStatementAnonymization> $anonymizations {@link Statement::anonymizations}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Statement> $publicStatement {@link Statement::publicStatement}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Statement> $toSendPerMail {@link Statement::toSendPerMail}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Statement> $title {@link Statement::title}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Statement> $text {@link Statement::text}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Statement> $recommendation {@link Statement::recommendation}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Statement> $memo {@link Statement::memo}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Statement> $feedback {@link Statement::feedback}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Statement> $reasonParagraph {@link Statement::reasonParagraph}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Statement> $planningDocument {@link Statement::planningDocument}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Statement> $file {@link Statement::file}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Statement> $mapFile {@link Statement::mapFile}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Statement> $countyNotified {@link Statement::countyNotified}
 * @property-read ToOneRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,Statement,ParagraphVersion> $paragraph {@link Statement::paragraph}
 * @property-read ToOneRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,Statement,SingleDocumentVersion> $document {@link Statement::document}
 * @property-read ToOneRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,Statement,Elements> $element {@link Statement::element}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Statement> $polygon {@link Statement::polygon}
 * @property-read ToOneRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,Statement,DraftStatement> $draftStatement {@link Statement::draftStatement}
 * @property-read ToOneRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,Statement,StatementMeta> $meta {@link Statement::meta}
 * @property-read ToManyRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,Statement,StatementVersionField> $version {@link Statement::version}
 * @property-read ToManyRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,Statement,StatementAttribute> $statementAttributes {@link Statement::statementAttributes}
 * @property-read ToManyRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,Statement,StatementVote> $votes {@link Statement::votes}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Statement> $numberOfAnonymVotes {@link Statement::numberOfAnonymVotes}
 * @property-read ToManyRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,Statement,StatementLike> $likes {@link Statement::likes}
 * @property-read ToManyRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,Statement,Tag> $tags {@link Statement::tags}
 * @property-read ToManyRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,Statement,County> $counties {@link Statement::counties}
 * @property-read ToManyRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,Statement,PriorityArea> $priorityAreas {@link Statement::priorityAreas}
 * @property-read ToManyRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,Statement,Municipality> $municipalities {@link Statement::municipalities}
 * @property-read ToManyRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,Statement,StatementFragment> $fragments {@link Statement::fragments}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Statement> $voteStk {@link Statement::voteStk}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Statement> $votePla {@link Statement::votePla}
 * @property-read ToOneRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,Statement,GdprConsent> $gdprConsent {@link Statement::gdprConsent}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Statement> $submitType {@link Statement::submitType}
 * @property-read ToOneRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,Statement,User> $assignee {@link Statement::assignee}
 * @property-read ToOneRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,Statement,Statement> $headStatement {@link Statement::headStatement}
 * @property-read ToManyRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,Statement,Statement> $cluster {@link Statement::cluster}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Statement> $manual {@link Statement::manual}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Statement> $clusterStatement {@link Statement::clusterStatement}
 * @property-read ToOneRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,Statement,Statement> $placeholderStatement {@link Statement::placeholderStatement}
 * @property-read ToOneRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,Statement,Statement> $movedStatement {@link Statement::movedStatement}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Statement> $name {@link Statement::name}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Statement> $replied {@link Statement::replied}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Statement> $draftsListJson {@link Statement::draftsListJson}
 * @property-read ToManyRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,Statement,Segment> $segmentsOfStatement {@link Statement::segmentsOfStatement}
 * @property-read ToManyRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,Statement,StatementAttachment> $attachments {@link Statement::attachments}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Statement> $segmentationPiRetries {@link Statement::segmentationPiRetries}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Statement> $piSegmentsProposalResourceUrl {@link Statement::piSegmentsProposalResourceUrl}
 * @property-read ToManyRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,Statement,ProcedurePerson> $similarStatementSubmitters {@link Statement::similarStatementSubmitters}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Statement> $anonymous {@link Statement::anonymous}
 */
class BaseStatementResourceConfigBuilder extends MagicResourceConfigBuilder
{
}
