<?php

declare(strict_types=1);

/**
 * This file is part of the package demosplan.
 *
 * (c) 2010-present DEMOS plan GmbH, for more information see the license file.
 *
 * All rights reserved
 */

namespace demosplan\DemosPlanCoreBundle\ResourceConfigBuilder;

use demosplan\DemosPlanCoreBundle\Entity\Help\ContextualHelp;
use demosplan\DemosPlanCoreBundle\Entity\Map\GisLayer;
use demosplan\DemosPlanCoreBundle\Entity\Map\GisLayerCategory;
use EDT\DqlQuerying\Contracts\ClauseFunctionInterface;
use EDT\DqlQuerying\Contracts\OrderBySortMethodInterface;
use EDT\JsonApi\PropertyConfig\Builder\AttributeConfigBuilderInterface;
use EDT\JsonApi\PropertyConfig\Builder\ToOneRelationshipConfigBuilderInterface;
use EDT\JsonApi\ResourceConfig\Builder\MagicResourceConfigBuilder;

/**
 * WARNING: THIS CLASS IS AUTOGENERATED.
 * MANUAL CHANGES WILL BE LOST ON RE-GENERATION.
 *
 * To add additional properties, you may want to
 * create an extending class and add them there.
 *
 * @template-extends MagicResourceConfigBuilder<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,GisLayer>
 *
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,GisLayer> $ident {@link GisLayer::ident}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,GisLayer> $bplan {@link GisLayer::bplan}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,GisLayer> $defaultVisibility {@link GisLayer::defaultVisibility}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,GisLayer> $deleted {@link GisLayer::deleted}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,GisLayer> $legend {@link GisLayer::legend}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,GisLayer> $layers {@link GisLayer::layers}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,GisLayer> $name {@link GisLayer::name}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,GisLayer> $opacity {@link GisLayer::opacity}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,GisLayer> $order {@link GisLayer::order}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,GisLayer> $projectionLabel {@link GisLayer::projectionLabel}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,GisLayer> $projectionValue {@link GisLayer::projectionValue}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,GisLayer> $procedureId {@link GisLayer::procedureId}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,GisLayer> $print {@link GisLayer::print}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,GisLayer> $scope {@link GisLayer::scope}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,GisLayer> $scope1 {@link GisLayer::scope1}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,GisLayer> $type {@link GisLayer::type}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,GisLayer> $serviceType {@link GisLayer::serviceType}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,GisLayer> $capabilities {@link GisLayer::capabilities}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,GisLayer> $tileMatrixSet {@link GisLayer::tileMatrixSet}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,GisLayer> $url {@link GisLayer::url}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,GisLayer> $enabled {@link GisLayer::enabled}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,GisLayer> $gId {@link GisLayer::gId}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,GisLayer> $layerVersion {@link GisLayer::layerVersion}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,GisLayer> $xplan {@link GisLayer::xplan}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,GisLayer> $createDate {@link GisLayer::createDate}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,GisLayer> $modifyDate {@link GisLayer::modifyDate}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,GisLayer> $deleteDate {@link GisLayer::deleteDate}
 * @property-read ToOneRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,GisLayer,ContextualHelp> $contextualHelp {@link GisLayer::contextualHelp}
 * @property-read ToOneRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,GisLayer,GisLayerCategory> $category {@link GisLayer::category}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,GisLayer> $treeOrder {@link GisLayer::treeOrder}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,GisLayer> $userToggleVisibility {@link GisLayer::userToggleVisibility}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,GisLayer> $visibilityGroupId {@link GisLayer::visibilityGroupId}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,GisLayer> $isMiniMap {@link GisLayer::isMiniMap}
 */
class BaseGisLayerResourceConfigBuilder extends MagicResourceConfigBuilder
{
}
