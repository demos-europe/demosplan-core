<?php

declare(strict_types=1);

namespace demosplan\DemosPlanCoreBundle\ResourceConfigBuilder;

use EDT\DqlQuerying\Contracts\ClauseFunctionInterface;
use EDT\DqlQuerying\Contracts\OrderBySortMethodInterface;
use EDT\JsonApi\PropertyConfig\Builder\AttributeConfigBuilderInterface;
use EDT\JsonApi\PropertyConfig\Builder\ToOneRelationshipConfigBuilderInterface;
use EDT\JsonApi\ResourceConfig\Builder\MagicResourceConfigBuilder;
use demosplan\DemosPlanCoreBundle\Entity\Document\Elements;
use demosplan\DemosPlanCoreBundle\Entity\Document\SingleDocument;
use demosplan\DemosPlanCoreBundle\Entity\Document\SingleDocumentVersion;
use demosplan\DemosPlanCoreBundle\Entity\Procedure\Procedure;

/**
 * WARNING: THIS CLASS IS AUTOGENERATED.
 * MANUAL CHANGES WILL BE LOST ON RE-GENERATION.
 *
 * To add additional properties, you may want to
 * create an extending class and add them there.
 *
 * @template-extends MagicResourceConfigBuilder<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,SingleDocumentVersion>
 *
 * @property-read ToOneRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,SingleDocumentVersion,SingleDocument> $singleDocument {@link SingleDocumentVersion::singleDocument}
 * @property-read ToOneRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,SingleDocumentVersion,Procedure> $procedure {@link SingleDocumentVersion::procedure}
 * @property-read ToOneRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,SingleDocumentVersion,Elements> $element {@link SingleDocumentVersion::element}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,SingleDocumentVersion> $category {@link SingleDocumentVersion::category}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,SingleDocumentVersion> $order {@link SingleDocumentVersion::order}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,SingleDocumentVersion> $title {@link SingleDocumentVersion::title}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,SingleDocumentVersion> $text {@link SingleDocumentVersion::text}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,SingleDocumentVersion> $symbol {@link SingleDocumentVersion::symbol}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,SingleDocumentVersion> $document {@link SingleDocumentVersion::document}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,SingleDocumentVersion> $statementEnabled {@link SingleDocumentVersion::statementEnabled}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,SingleDocumentVersion> $visible {@link SingleDocumentVersion::visible}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,SingleDocumentVersion> $deleted {@link SingleDocumentVersion::deleted}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,SingleDocumentVersion> $versionDate {@link SingleDocumentVersion::versionDate}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,SingleDocumentVersion> $createDate {@link SingleDocumentVersion::createDate}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,SingleDocumentVersion> $modifyDate {@link SingleDocumentVersion::modifyDate}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,SingleDocumentVersion> $deleteDate {@link SingleDocumentVersion::deleteDate}
 */
class BaseSingleDocumentVersionResourceConfigBuilder extends MagicResourceConfigBuilder
{
}
