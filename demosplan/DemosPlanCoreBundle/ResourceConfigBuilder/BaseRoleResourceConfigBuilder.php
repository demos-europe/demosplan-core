<?php

declare(strict_types=1);

namespace demosplan\DemosPlanCoreBundle\ResourceConfigBuilder;

use EDT\DqlQuerying\Contracts\ClauseFunctionInterface;
use EDT\DqlQuerying\Contracts\OrderBySortMethodInterface;
use EDT\JsonApi\PropertyConfig\Builder\AttributeConfigBuilderInterface;
use EDT\JsonApi\PropertyConfig\Builder\ToManyRelationshipConfigBuilderInterface;
use EDT\JsonApi\ResourceConfig\Builder\MagicResourceConfigBuilder;
use demosplan\DemosPlanCoreBundle\Entity\User\Role;
use demosplan\DemosPlanCoreBundle\Entity\User\UserRoleInCustomer;

/**
 * WARNING: THIS CLASS IS AUTOGENERATED.
 * MANUAL CHANGES WILL BE LOST ON RE-GENERATION.
 *
 * To add additional properties, you may want to
 * create an extending class and add them there.
 *
 * @template-extends MagicResourceConfigBuilder<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,Role>
 *
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Role> $ident {@link Role::ident}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Role> $code {@link Role::code}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Role> $groupCode {@link Role::groupCode}
 * @property-read AttributeConfigBuilderInterface<ClauseFunctionInterface<bool>,Role> $groupName {@link Role::groupName}
 * @property-read ToManyRelationshipConfigBuilderInterface<ClauseFunctionInterface<bool>,OrderBySortMethodInterface,Role,UserRoleInCustomer> $userRoleInCustomers {@link Role::userRoleInCustomers}
 */
class BaseRoleResourceConfigBuilder extends MagicResourceConfigBuilder
{
}
