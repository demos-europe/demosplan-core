{% set gislayer = templateVars.gislayer %}
{% set isGlobalLayer = gislayer.globalLayer|default(false) %}

{% extends '@DemosPlanCore/DemosPlanCore/procedure.html.twig' %}

{% block demosplanbundlecontent %}

    <h1>{{ "drawing.gislayer.edit"|trans }}</h1>

    {% if isGlobalLayer %}
        <p>{{ "explanation.gislayer.isglobal"|trans }}</p>
    {% endif %}

    <form action="{{ path('DemosPlan_map_administration_gislayer_edit',{'procedure':procedure, 'gislayerID': gislayer.ident}) }}" method="post" enctype="multipart/form-data" name="xsubmititem" id="form" data-dp-validate>

            <input type="hidden" value="{{ gislayer.ident|default() }}" name="r_ident">
            <input type="hidden" value="{{ isGlobalLayer == true ? '1' : '0' }}" name="r_isGlobalLayer">
            {{ include('@DemosPlanCore/DemosPlanCore/includes/csrf.html.twig') }}

            {% if isGlobalLayer %}

                {% block baseSettings_globallayer %}
                    <label class="u-mb-0_5">
                        {{ "name"|trans }}
                        <input class="layout__item" type="text" value="{{ gislayer.name|default() }}" disabled>
                    </label>
                    <label class="u-mb-0_5">
                        {{ "url"|trans }}
                        <input class="layout__item" type="text" value="{{ gislayer.url|default() }}" disabled>
                    </label>
                    <label class="u-mb-0_5">
                        {{ "layer"|trans }}
                        <input class="layout__item" type="text" value="{{ gislayer.layers|default() }}" disabled>
                    </label>
                {% endblock baseSettings_globallayer %}

                <p class="lbl u-mb-0">
                    {{ "legend"|trans }}
                </p>
                <div class="u-mb-0_5">
                    {% if gislayer.legend is defined and gislayer.legend != '' %}
                        {#
                            global gis layer can use core_file_procedure as check for procedure
                            is automatically skipped, when no procedure is saved at the file.
                            It is better to use core_file_procedure here as it checks the procedure permissions and declines the access to the file via this route.
                        #}
                        <a
                            href="{{ path("core_file_procedure", { 'hash': gislayer.legend|getFile('hash'), 'procedureId': procedure }) }}"
                            target="_blank"
                            rel="noopener">
                            <i class="fa fa-file-o"></i>
                            {{ "legend"|trans }}
                            {% if(gislayer.legend|getFile('size')|length > 0 or gislayer.legend|getFile('mimeType')|length > 0 ) %}
                                ({{ gislayer.legend|getFile('mimeType') }}
                                {{ gislayer.legend|getFile('size') }})
                            {% endif %}
                        </a>
                    {% else %}
                        <p>
                            {{ "explanation.pdf.no"|trans }}
                        </p>
                    {% endif %}
                </div>

            {% else %} {# kein globaler Layer #}

                {% block layerType %}
                    {%- apply spaceless %}
                        {% if hasPermission('feature_map_baselayer') %}
                            <ul class="layout__item u-4-of-5 o-list bg-color--grey-light-2 u-p-0_5 u-mb">
                                <li>
                                    <label class="u-mb-0_25 cursor-pointer">
                                        <input
                                            type="radio"
                                            name="r_type"
                                            data-cy="base"
                                            value="base"
                                            {% if gislayer.type|default('') == 'base' %}checked="checked"{% endif %}
                                        >
                                        {{ "map.base"|trans }}
                                    </label>
                                </li>
                                <li>
                                    <label class="u-mb-0_25 cursor-pointer">
                                        <input
                                            type="radio"
                                            name="r_type"
                                            data-cy="overlay"
                                            value="overlay"
                                            {% if gislayer.type|default('') != 'base' %}checked="checked"{% endif %}>
                                        {{ "overlay"|trans }}
                                    </label>
                                    {% if hasPermission('area_public_participation') and hasPermission('feature_map_use_territory') %}
                                        <ul class="u-pl">
                                            <li>
                                                <label
                                                    class="u-mb-0_25 cursor-pointer"
                                                    title="Mit Planzeichnung können Sie einen B-Plan anlegen. Dieser wird ein-/ausblendbar über die Grundkarten gelegt.">
                                                    <input
                                                        type="checkbox"
                                                        id="bPlan"
                                                        name="r_bplan"
                                                        data-cy="r_bplan"
                                                        data-requires="[name=r_type][value=overlay]"
                                                        data-to-disable="#scope"
                                                        value="1"
                                                        {% if gislayer.bplan|default(false) == true %}checked="checked"{% endif %}
                                                    >
                                                    {{ "drawing"|trans }}
                                                </label>
                                            </li>
                                            <li>
                                                <label
                                                    class="u-mb-0_25 cursor-pointer"
                                                    title="Geltungsbereich zeigt nur in der Beteiligungsebene die Umrandung des Plans über der Grundkarte an.">
                                                    <input
                                                        type="checkbox"
                                                        id="scope"
                                                        name="r_scope"
                                                        data-cy="r_scope"
                                                        data-requires="[name=r_type][value=overlay]"
                                                        data-to-disable="#bPlan"
                                                        value="1"
                                                        {% if gislayer.scope|default(false) == true %}checked="checked"{% endif %}
                                                    >
                                                    {{ "layer.territory"|trans }}
                                                </label>
                                            </li>
                                        </ul>
                                    {% endif %}
                                </li>
                            </ul>
                        {% else %}
                            <input
                                type="hidden"
                                name="r_type"
                                data-cy="overlay"
                                value="overlay"
                                checked>
                        {% endif %}

                        {% if hasPermission('feature_xplan_defaultlayers') %}
                            <label class="layout__item u-1-of-5 u-mb-0_5 cursor-pointer"
                                   title="Mit XPlan können Sie einen XPlanlayer anlegen.">
                                <input
                                    data-cy="mapAdminGislayerEdit:xplan"
                                    type="checkbox"
                                    name="r_xplan"
                                    {% if gislayer.xplan == true %}checked{% endif %}>
                                {{ "xplan"|trans }}
                            </label>
                        {% endif %}

                    {% endapply -%}
                {% endblock layerType %}

                {% block baseSettings %}
                    <layer-settings
                        has-preview="true"
                        init-name="{{ gislayer.name|default }}"
                        init-service-type="{{ gislayer.serviceType|default }}"
                        init-url="{{ gislayer.url|default }}"
                        init-layers="{{ gislayer.layers|default }}"
                        init-matrix-set="{{ gislayer.tileMatrixSet|default }}"
                        init-projection="{{ gislayer.projectionLabel|default }}"
                        init-version="{{ gislayer.layerVersion|default }}"
                        procedure-id="{{ procedure }}"
                        :available-projections="JSON.parse('{{ templateVars.availableProjections|map(el => { label: el['label'], value: el['label'] })|json_encode|e('js', 'utf-8') }}')"
                        :show-xplan-default-layer="false"
                    ></layer-settings>
                {% endblock baseSettings %}

                {% if hasPermission('feature_map_layer_legend_file') %}
                    {% if gislayer.legend is defined and gislayer.legend != '' %}

                        <p class="lbl u-mb-0_25">
                            {{ "legend"|trans }}
                        </p>
                        <div class="u-mb-0_5">
                            <a
                                href="{{ path("core_file_procedure", { 'hash': gislayer.legend|getFile('hash'), 'procedureId': procedure }) }}"
                                target="_blank"
                                rel="noopener">
                                <i class="fa fa-file-o"></i>
                                {{ "legend"|trans }}
                                {% if (gislayer.legend|getFile('size')|length > 0 or gislayer.legend|getFile('mimeType')|length > 0 ) %}
                                    ({{ gislayer.legend|getFile('mimeType') }}
                                    {{ gislayer.legend|getFile('size') }})
                                {% endif %}
                            </a>
                            <label class="lbl--text u-mb-0_25">
                                <input type="checkbox" value="1" name="delete_legend">
                                {{ "delete"|trans }}
                            </label>
                        </div>

                    {% else %}

                        {{
                        fileupload(
                            "r_legend",
                            "legend"|trans
                            ~ '<p class="lbl__hint">'
                            ~ "explanation.pdf.no"|trans
                            ~ '</p>',
                            "pdf-img",
                            "form.button.upload.file"
                        )
                        }}

                    {% endif %}
                {% endif %}

            {% endif %} {# END isGlobalLayer #}

            {{ uiComponent('form.row', {
                elements: [
                    {
                        label: { text: 'opacity.percent'|trans },
                        control: { name: 'r_opacity', value: gislayer.opacity|default(100), pattern: "^\\d{1,2}?([\\.,]\\d{1,2})?$|^100$", size: 'tiny' },
                        id: 'r_opacity',
                        type: 'text',
                        required: true
                    }
                ]
            }) }}

            {% if hasPermission('feature_map_layer_contextual_help') %}
                {% if gislayer.contextualHelp is not defined or gislayer.contextualHelp is null %}
                    {% set contextualHelpText = "" %}
                {% else %}
                    {% set contextualHelpText = gislayer.contextualHelp.text %}
                {% endif %}
                {{ uiComponent('form.row', {
                    elements: [
                        {
                            label: { text: 'contextual.help.text'|trans },
                            control: { name: 'r_contextualHelpText', value: contextualHelpText|default },
                            id: 'r_contextualHelpText',
                            type: 'text'
                        }
                    ]
                }) }}
            {% endif %}
            {% if hasPermission('feature_map_print_layer') %}
                <label class="u-mb-0_5">
                    <input
                        data-cy="editMapLayerPrint"
                        type="checkbox"
                        name="r_print"
                        value="1"
                        {% if gislayer.print is defined and gislayer.print == 1 %}checked{% endif %}>
                    {{ "explanation.gislayer.print"|trans }}
                    {% include '@DemosPlanCore/Extension/contextual_help.html.twig' with {
                        helpText: 'explanation.gislayer.print.help'|trans,
                        cssClasses:'float-right u-mt-0_125'
                    } %}
                </label>
            {% endif %}
            {% if hasPermission('feature_map_layer_visibility') %}
                <label class="u-mb-0_5">
                    <input
                        data-cy="editMapLayerDefaultVisibility"
                        type="checkbox"
                        name="r_default_visibility"
                        value="1"
                        {% if gislayer.HasDefaultVisibility is defined and gislayer.HasDefaultVisibility == 1 %}checked{% endif %}
                        {% if gislayer.visibilityGroupId is defined and gislayer.visibilityGroupId != '' %}disabled{% endif %}
                    >
                    {{ "explanation.gislayer.default.visibility"|trans }}
                    {% if gislayer.visibilityGroupId is defined and gislayer.visibilityGroupId != '' %}
                        {% if gislayer.HasDefaultVisibility is defined and gislayer.HasDefaultVisibility == 1 %}
                            <input type="hidden" name="r_default_visibility" value="1">
                        {% endif %}
                        <br /><span class="hint">{{ "explanation.gislayer.visibility.group.locked"|trans }}</span>
                    {% endif %}
                </label>

                <label class="u-mb-0_5">
                    <input
                        id="user_toggle_visibility"
                        data-cy="editMapLayerToggleVisibility"
                        type="checkbox"
                        name="r_user_toggle_visibility"
                        value="1"
                        {% if gislayer.visibilityGroupId is defined and gislayer.visibilityGroupId != '' %}disabled{% endif %}
                        {% if (gislayer.userToggleVisibility is defined and gislayer.userToggleVisibility == 1) %}checked{% endif %}
                    >
                    {{ "explanation.gislayer.usertoggle.visibility"|trans }}
                    {% if gislayer.visibilityGroupId is defined and gislayer.visibilityGroupId != '' %}
                        {% if (gislayer.userToggleVisibility is defined and gislayer.userToggleVisibility == 1) %}
                            <input type="hidden" name="r_user_toggle_visibility" value="1">
                        {% endif %}
                        <br /><span class="hint">{{ "explanation.gislayer.visibility.group.locked"|trans }}</span>
                    {% endif %}
                </label>
            {% else %}
                <input
                    type="hidden"
                    name="r_default_visibility"
                    data-cy="mapLayerDefaultVisibility"
                    value="1"
                    checked>
            {% endif %}
            <label class="u-mt u-mb-0_5">
                <input type="checkbox" name="r_enabled" value="1" {% if gislayer.enabled is defined and gislayer.enabled == 1  %}checked{% endif %}>
                {{ "explanation.gislayer.enabled"|trans }}
            </label>


            <div class="text-right u-mt-0_5 space-inline-s">
                <input
                    class="btn btn--primary"
                    data-cy="saveMapLayer"
                    type="submit"
                    name="saveLayer"
                    value="{{ "save"|trans }}">
                <a
                    class="btn btn--secondary"
                    data-cy="editMapAdminGislayer:abort"
                    href="{{ path('DemosPlan_map_administration_gislayer',{'procedureId':procedure}) }}">
                    {{ "abort"|trans }}
                </a>
            </div>

    </form>
{% endblock demosplanbundlecontent %}

{% block javascripts %}
    {{ parent() }}
    {{ webpackBundles(['ol.js', 'map-mapAdminGislayerEdit.js']) }}
{% endblock javascripts %}

