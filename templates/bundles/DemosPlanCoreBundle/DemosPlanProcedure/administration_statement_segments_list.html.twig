{% extends '@DemosPlanCore/DemosPlanCore/procedure.html.twig' %}
{% set user = {} %}
{% set user = user|merge({ id: currentUser.id }) %}
{% set user = user|merge({ firstname: currentUser.firstname }) %}
{% set user = user|merge({ lastname: currentUser.lastname }) %}
{% set user = user|merge({ orgaName: currentUser.organisationNameLegal }) %}
{% set submitTypeOptions = [] %}

{% for value, label in getFormOption('statement_submit_types.values', true) %}
    {% set submitTypeOptions = submitTypeOptions|merge([{ label: label, value: value }]) %}
{% endfor %}

{% block component_part %}
{#    TP DO: Fill statementFormDefinitions #}
    <statement-segments-list
        :available-counties="JSON.parse('{{ templateVars.availableCounties|default([])|json_encode|e('js', 'utf-8') }}')"
        :available-external-phases="JSON.parse('{{ templateVars.externalPhases|default([])|json_encode|e('js', 'utf-8') }}')"
        :available-internal-phases="JSON.parse('{{ templateVars.internalPhases|default([])|json_encode|e('js', 'utf-8') }}')"
        :available-municipalities="JSON.parse('{{ templateVars.municipalities|default([])|json_encode|e('js', 'utf-8') }}')"
        :available-priority-areas="JSON.parse('{{ templateVars.priorityAreas|default([])|json_encode|e('js', 'utf-8') }}')"
        :current-user="JSON.parse('{{ user|json_encode|e('js', 'utf-8') }}')"
        external-constant="{{ constant('demosplan\\DemosPlanCoreBundle\\Entity\\Statement\\Statement::EXTERNAL') }}"
        :is-source-and-coupled-procedure="{{ templateVars.isSourceAndCoupledProcedure ? 'true' : 'false' }}"
        :procedure-statement-priority-area="Boolean('{{ procedureStatementPriorityArea|default(false) }}')"
        :procedure="JSON.parse('{{ procedure|json_encode|e('js', 'utf-8') }}')"
        :recommendation-procedure-ids="JSON.parse('{{ recommendationProcedureIds|json_encode|e('js', 'utf-8') }}')"
        statement-id="{{ statementId }}"
        statement-extern-id="{{ statementExternId }}"
        statement-form-definitions="{}"
        :submit-type-options="JSON.parse('{{ submitTypeOptions|json_encode|e('js', 'utf-8') }}')">
    </statement-segments-list>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    {{ webpackBundles(['ol.js', 'procedure-administrationStatementSegmentsList.js']) }}
{% endblock javascripts %}
