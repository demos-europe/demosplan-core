{% extends '@DemosPlanCore/DemosPlanCore/base.html.twig' %}
{% block component_part %}

    {% if
        hasPermission('feature_statements_import_excel') or
        hasPermission('feature_import_statement_pdf') or
        hasPermission('feature_segments_import_excel') or
        hasPermission('feature_simplified_new_statement_create') %}
        {% include '@DemosPlanCore/DemosPlanCore/includes/base_pageheader.html.twig' with {
            heading: 'statements'|trans,
            subnav: [ {
                href: path('DemosPlan_procedure_import', { procedureId: procedure }),
                label:  'statement.new'|trans,
                datacy: 'listStatements:statementNew',
                icon: 'fa-plus'
            }],
            flush: true
        } %}
    {% else %}
        {% include '@DemosPlanCore/DemosPlanCore/includes/base_pageheader.html.twig' with {
            heading: 'statements'|trans,
            subnav: [ {
                href: path('DemosPlan_statement_new_submitted', { procedureId: procedure }),
                label:  'statement.new'|trans,
                icon: 'fa-plus'
            }],
            flush: true
        } %}
    {% endif %}
    {% set submitTypesOptions = [] %}
    {% for key, translated in getFormOption('statement_submit_types.values', true)|filter(key => key != 'system') %}
        {% set submitTypesOptions = submitTypesOptions|merge([{ label: translated, value: key }]) %}
    {% endfor %}

    <list-statements
        class="u-mv-0_5"
        current-user-id="{{ currentUser.ident }}"
        :is-source-and-coupled-procedure="{{ templateVars.isSourceAndCoupledProcedure == 1 ? 'true' : 'false' }}"
        procedure-id="{{ procedure }}"
        :submit-type-options="JSON.parse('{{ submitTypesOptions|json_encode|e('js', 'utf-8') }}')"
    ></list-statements>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    {{ webpackBundles(['statement-listStatements.js']) }}
{% endblock javascripts %}
