{# translate active filter #}
{% if templateVars.filterSet.activeFilters is defined %}
    {% set filtersSet = [] %}
    {% for activeFilter in templateVars.filterSet.activeFilters|default([]) %}
        {% set filtersSet = filtersSet|merge([activeFilter|trans]) %}
    {% endfor %}
{% endif %}

{# show active filters #}
{% if filtersSet is defined and filtersSet|length > 0 %}

    <fieldset class="u-mt-0_5 u-pb-0_5 border--bottom">

        <div class="layout__item u-1-of-6 u-pl-0">
            <label for="active-filters" class="u-mv-0">{{ "filter.active"|trans }}:</label>
        </div><!--

     --><div class="layout__item u-5-of-6 u-mv-0">
            {{ filtersSet|default([])|join(", ") }}
        </div>

    </fieldset>

{% endif %}

<div class="c-at__controls o-sticky o-sticky--border" data-sticky="lap-up">

    {# table select/export and filter header #}
    {%- apply spaceless %}

        <div class="layout--flush u-pv-0_25">

            <div class="layout__item u-3-of-4">
                {# select-all Checkbox #}
                <label class="u-m-0 u-mr u-p-0 inline-block">
                    <input class="u-mr-0" type="checkbox" id="select_all" name="checkAllItems" value="" data-form-actions-check-all data-export-actions-check-all>
                    {{ "markall"|trans }}
                </label>

                {# Export Button #}
                <button class="btn--blank o-link--default" name="exportFragments" data-export-actions-export>
                    <i class="fa fa-share-square u-mr-0_125" aria-hidden="true"></i>
                    {{ "fragment.export"|trans }}
                </button>
                {% if templateVars.isArchive is defined %}
                    <input type="hidden" value="true" data-export-is-archive>
                {% endif %}
            </div>

            {#  Filter modal trigger + Filter modal  #}
            <div class="float-right">
                {# Fields that need permission check - Format: 'nameInElasticsearcYMLFile': [arrayOfPermissionsToCheck] #}
                {% set filtersPermissionFields = {
                    'priorityAreaKeys': ['field_statement_priority_area'],
                    'countyNames.raw': ['field_statement_county'],
                    'municipalityNames': ['field_statement_municipality'],
                    'tagNames': ['feature_statements_tag'],
                } %}

                {#  DocumentFilters are in a different block #}
                {%  set documentFilters = ['elementId', 'paragraphId'] %}

                {% set filters = [] %}
                {% for filter in templateVars.definition.interfaceFilters %}
                    {% set values = filter.values|map(value => { label: value.label, count: value.count, value: value.value} ) %}
                    {% set filters = filters|merge([{name: filter.name, values: values, title: filter.titleKey}]) %}
                    {% set values = [] %}
                {% endfor %}

                <dp-fragment-list-filter-modal
                    inline-template
                    :filters="JSON.parse('{{ filters|default([])|json_encode|e('js', 'utf-8') }}')"
                    :applied-filters="JSON.parse('{{ templateVars.definition.filters.must|map(el => { value: el.value, field: el.field })|default([])|json_encode|e('js', 'utf-8') }}')"
                    :permission-fields="JSON.parse('{{ filtersPermissionFields|default([])|json_encode|e('js', 'utf-8') }}')">
                    <div
                        v-cloak
                        class="inline-block">
                        <a
                            href="#"
                            @click.stop.prevent="$refs.filterModal.toggle()"
                            class="{% if templateVars.filterSet.activeFilters is defined and templateVars.filterSet.activeFilters|length > 0 %}color-highlight{% endif %}"
                        >
                            <i class="fa fa-lg fa-filter{% if templateVars.filterSet.activeFilters is defined and templateVars.filterSet.activeFilters|length %} color-highlight{% endif %}"></i>
                            {{ 'filter.verb'|trans }}
                        </a>

                        <dp-modal
                            class="layout--flush"
                            content-classes="u-2-of-3"
                            ref="filterModal">

                            <!-- modal header -->
                            <template v-slot:header>
                                {{ 'filter.fragments'|trans }}
                            </template>

                            <div class="layout__item u-1-of-2 u-pr" v-for="group in filterGroups">
                                <fieldset>
                                    <legend class="u-pb">
                                        {% verbatim %}{{ Translator.trans(group.groupLabel) }}{% endverbatim %}
                                    </legend>
                                    {% for filter in templateVars.definition.interfaceFilters|default([]) %}
                                        {% for filterOption in filter.values|default([]) %}
                                            {% for mustFilter in templateVars.definition.filters.must %}
                                                {% if filter.name == mustFilter.field and filterOption.value == mustFilter.value %}
                                                    {{ mustFilter.value }}
                                                {% endif %}
                                            {% endfor %}
                                        {% endfor %}
                                    {% endfor %}
                                    <template v-for="filter in group.values">
                                        <template v-if="filter.hasPermission">
                                            <label :for="filter.name" class="layout__item u-1-of-4 u-pl-0 text--right">
                                                {% verbatim %}{{ Translator.trans(filter.title) }}{% endverbatim %}
                                            </label>
                                            <div class="layout__item u-3-of-4">
                                                <dp-multiselect
                                                    v-model="userSelection[stripRaw(filter.name)]"
                                                    multiple
                                                    :options="Object.values(filter.values)"
                                                    track-by="value">
                                                    <template v-slot:option="{ props }">
                                                        {% verbatim %}{{ props.option.label }} ({{ Translator.trans(props.option.count) }}){% endverbatim %}
                                                    </template>
                                                    <template v-slot:tag="{ props }">
                                                        <span class="multiselect__tag">
                                                            {% verbatim %}{{ props.option.label }} ({{ Translator.trans(props.option.count) }}){% endverbatim %}
                                                            <i aria-hidden="true"  @click="props.remove(props.option)" tabindex="1" class="multiselect__tag-icon"></i>
                                                            <input type="hidden" :value="props.option.value" :name="filter.name + '[]'"/>
                                                        </span>
                                                    </template>
                                                </dp-multiselect>
                                            </div>
                                        </template>
                                    </template>
                                </fieldset>
                            </div>

                            <div class="text--right space-inline-s">
                                <input class="btn btn--primary" type="submit" value="{{ "apply"|trans }}">
                                <a class="btn btn--secondary" href="{{ path( backpath ) }}?resetForm=1">
                                    {{ "reset"|trans }}
                                </a>
                            </div>
                        </dp-modal>
                    </div>
                </dp-fragment-list-filter-modal>

            </div>
        </div>

    {% endapply -%}

</div>
