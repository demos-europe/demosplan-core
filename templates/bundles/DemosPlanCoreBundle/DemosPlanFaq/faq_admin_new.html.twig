{% extends '@DemosPlanCore/DemosPlanCore/base.html.twig' %}

{% block component_part %}

    {% set actionName = 'faqnew' %}
    {% set actionPath = path('DemosPlan_faq_administration_faq_new',{'procedure':procedure }) %}
    {% set cancelPath = path('DemosPlan_faq_administration_faq',{'procedure':procedure}) %}

    <h1>{{ 'add.entity'|trans({ entity: 'faq'|trans })|trans }}</h1>

    <form class="u-pb" name="xsubmititem" action="{{ actionPath }}" method="post" enctype="multipart/form-data" data-dp-validate>
        <input name="action" type="hidden" value="{{ actionName }}">

        {{ uiComponent('form.row', {
            elements: [
                {
                    label: { text: 'status'|trans },
                    control: {
                        name: 'r_enable',
                        options: [
                            {
                                label: 'released',
                                value: '1'
                            },
                            {
                                label: 'blocked',
                                value: '0',
                                selected: true
                            }
                        ],
                        attributes: ['data-cy=FAQStatus']
                    },
                    type: 'select',
                    elementSize: 'smaller',
                    required: true
                }
            ]
        }) }}

        <div class="u-mb" id="groupCodeWrapper" data-cy="groupVisibleCheckbox">
            {% set roleGroupsFaqVisibilityOptions = [
                {
                    label: { text: 'role.fp.for'|trans, labelRequired: false },
                    control: { name: 'r_group_code[]', value: 'GLAUTH', attributes: ['data-cy=fachplanerVisibility'] },
                    id: 'fachplanerVisibility',
                    type: 'checkbox',
                    elementSize: 'medium',
                    showFor: 'GLAUTH'
                },
                {
                    label: { text: 'citizen.for'|trans, labelRequired: false },
                    control: { name: 'r_group_code[]', value: 'GGUEST', attributes: ['data-cy=citizenVisibility'] },
                    id: 'citizenVisibility',
                    type: 'checkbox',
                    elementSize: 'medium',
                    showFor: 'GGUEST'
                },
                {
                    label: { text: 'invitable_institution.for'|trans, labelRequired: false },
                    control: { name: 'r_group_code[]', value: 'GPSORG', attributes: ['data-cy=publicAgencyVisibility'] },
                    id: 'publicAgencyVisibility',
                    type: 'checkbox',
                    elementSize: 'medium',
                    showFor: 'GPSORG'
                }
            ]|filter(item => item.showFor in templateVars.roleGroupsFaqVisibility) %}

            {% if (roleGroupsFaqVisibilityOptions|length > 1) %}
                {{ uiComponent('form.row', {
                    elements: roleGroupsFaqVisibilityOptions,
                    heading: 'visible',
                    required: true,
                    isFieldset: true
                }) }}
            {% else %}
                {#  If there is only one role group to activate within the project,
                    users may control visibility by using the "status" toggle.
                    The value for visibility for that role group is saved as true,
                    in case another role group is activated later within the project. #}
                <input
                    type="hidden"
                    name="{{ roleGroupsFaqVisibilityOptions[0].control.name }}"
                    value="{{ roleGroupsFaqVisibilityOptions[0].control.value }}">
            {% endif %}
        </div>

        {% if templateVars.categories is defined %}
            {% set categoryOptions = [] %}
            {% for c in templateVars.categories %}
                {% set categoryOptions = categoryOptions|merge([{ label: c.title, value: c.id }]) %}
            {% endfor %}

            {{ uiComponent('form.row', {
                elements: [
                    {
                        label: { text: 'category'|trans },
                        control: { name: 'r_category_id', options: categoryOptions, attributes: ['data-cy=categoryFaqMenu'] },
                        id: 'r_category_id',
                        type: 'select',
                        elementSize: 'small',
                        required: true
                    }
                ]
            }) }}
        {% endif %}

        {{ uiComponent('form.row', {
            elements: [
                {
                    label: { text: 'heading'|trans },
                    control: { name: 'r_title', value: '', attributes: ['data-cy=FAQTitle'] },
                    type: 'text',
                    required: true
                }
            ]
        }) }}

        {{ uiComponent('form.row', {
            elements: [
                {
                    label: { text: 'text'|trans },
                    control: {
                        value: '',
                        procedureId: procedure,
                        hiddenInput: 'r_text',
                        linkButton: true,
                        ref: 'r_text'
                    },
                    type: 'editor',
                    id: 'r_text',
                    required: true
                }
            ]
        }) }}

        {{ uiComponent('button-row', {
            primary: uiComponent('button', { type: 'submit', attributes: ['data-cy=saveNewFAQ'] }),
            secondary: uiComponent('button', { color: 'secondary', href: cancelPath })
        }) }}
    </form>

{% endblock component_part %}

{% block javascripts %}
    {{ parent() }}
    {{ webpackBundles(['faq-faqAdminNew.js']) }}
{% endblock javascripts %}
