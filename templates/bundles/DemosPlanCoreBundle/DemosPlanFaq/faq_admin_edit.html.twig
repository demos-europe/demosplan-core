{% set faq = templateVars.faq %}

{# Rollengruppe initialisieren #}
{% set GGUEST = false %}
{% set GLAUTH = false %}
{% set GPSORG = false %}
{# Rollengruppe setzen #}
{% if faq.roles is defined %}
    {% for role in faq.roles %}
        {% if role.groupCode == 'GGUEST' %}
            {% set GGUEST = true %}
        {% elseif role.groupCode == 'GLAUTH' %}
            {% set GLAUTH = true %}
        {% elseif role.groupCode == 'GPSORG' %}
            {% set GPSORG = true %}
        {% endif %}
    {% endfor %}
{% endif %}

{% set actionname = 'faqnew' %}
{% if faq.id is defined %}
    {% set actionName = 'faqedit' %}
{% endif %}

{% extends '@DemosPlanCore/DemosPlanCore/base.html.twig' %}

{% block component_part %}

    {% set actionPath = path('DemosPlan_faq_administration_faq_edit',{'faqID':faq.id}) %}
    {% set cancelPath = path('DemosPlan_faq_administration_faq') %}

    <h1>{{ 'edit.entity'|trans({ entity: 'faq'|trans }) }}</h1>

    <form class="cf u-pb" name="xsubmititem" action="{{ actionPath }}" method="post" enctype="multipart/form-data" data-dp-validate>
		<input name="action" type="hidden" value="{{ actionName }}">
        <input name="r_id" type="hidden" value="{% if faq.id is defined %}{{ faq.id }}{% endif %}">

        {{ uiComponent('form.row', {
            elements: [
                {
                    label: { text: 'status'|trans },
                    control: {
                        name: 'r_enable',
                        options: [
                            {
                                label: 'released',
                                value: '1',
                                selected: templateVars.faq.enabled == true
                            },
                            {
                                label: 'blocked',
                                value: '0',
                                selected: templateVars.faq.enabled == false
                            }
                        ],
                        attributes: ['data-cy=FAQStatus']
                    },
                    type: 'select',
                    elementSize: 'smaller',
                    required: true
                }
            ]
        }) }}

        <div class="u-mb" id="groupCodeWrapper" data-cy="groupVisibleCheckbox">
            {% set roleGroupsFaqVisibilityOptions = [
                {
                    label: { text: 'role.fp.for'|trans, labelRequired: false },
                    control: { name: 'r_group_code[]', value: 'GLAUTH',checked: GLAUTH == true, attributes: ['data-cy=fachplanerVisibility'] },
                    id: 'fachplanerVisibility',
                    type: 'checkbox',
                    elementSize: 'medium',
                    showFor: 'GLAUTH'
                },
                {
                    label: { text: 'citizen.for'|trans, labelRequired: false },
                    control: { name: 'r_group_code[]', value: 'GGUEST', checked: GGUEST == true, attributes: ['data-cy=citizenVisibility'] },
                    id: 'citizenVisibility',
                    type: 'checkbox',
                    elementSize: 'medium',
                    showFor: 'GGUEST'
                },
                {
                    label: { text: 'invitable_institution.for'|trans, labelRequired: false },
                    control: { name: 'r_group_code[]', value: 'GPSORG', checked: GPSORG == true, attributes: ['data-cy=publicAgencyVisibility'] },
                    id: 'publicAgencyVisibility',
                    type: 'checkbox',
                    elementSize: 'medium',
                    showFor: 'GPSORG'
                }
            ]|filter(item => item.showFor in templateVars.roleGroupsFaqVisibility) %}

            {% if (roleGroupsFaqVisibilityOptions|length > 1) %}
                {{ uiComponent('form.row', {
                    elements: roleGroupsFaqVisibilityOptions,
                    heading: 'visible',
                    required: true,
                    isFieldset: true
                }) }}
            {% else %}
                {#  If there is only one role group to activate within the project,
                    users may control visibility by using the "status" toggle.
                    The value for visibility for that role group is saved as true,
                    in case another role group is activated later within the project. #}
                <input
                    type="hidden"
                    name="{{ roleGroupsFaqVisibilityOptions[0].control.name }}"
                    value="{{ roleGroupsFaqVisibilityOptions[0].control.value }}">
            {% endif %}
        </div>

        {% if templateVars.categories is defined %}
            {% set categoryOptions = [] %}
            {% set selected = faq.category.id|default %}

            {% for c in templateVars.categories %}
                {% set categoryOptions = categoryOptions|merge([{ label: c.title, value: c.id, selected: c.id == selected }]) %}
            {% endfor %}

            {{ uiComponent('form.row', {
                elements: [
                    {
                        label: { text: 'category'|trans },
                        control: { name: 'r_category_id', options: categoryOptions, attributes: ['data-cy=categoryFaqMenu'] },
                        id: 'r_category_id',
                        type: 'select',
                        elementSize: 'small',
                        required: true
                    }
                ]
            }) }}
        {% endif %}

        {{ uiComponent('form.row', {
            elements: [
                {
                    label: { text: 'heading'|trans },
                    control: { name: 'r_title', value: faq.title, attributes: ['data-cy=FAQTitle'] },
                    type: 'text',
                    required: true
                }
            ]
        }) }}

        {{ uiComponent('form.row', {
            elements: [
                {
                    label: { text: 'text'|trans },
                    control: {
                        value: faq.text,
                        hiddenInput: 'r_text',
                        linkButton: true,
                        ref: 'r_text'
                    },
                    type: 'editor',
                    id: 'r_text',
                    required: true
                }
            ]
        }) }}

        {{ uiComponent('button-row', {
            primary: uiComponent('button', { type: 'submit', attributes: ['data-cy=saveNewFAQ'] }),
            secondary: uiComponent('button', { color: 'secondary', href: cancelPath })
        }) }}
    </form>

{% endblock %}

{% block javascripts %}
    {{ parent() }}
    {{ webpackBundles(['faq-faqAdminEdit.js']) }}
{% endblock javascripts %}
