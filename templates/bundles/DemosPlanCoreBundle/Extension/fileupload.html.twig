{#
fileupload form field

requires:
    DpUploadFiles.vue and var uploadPath (uploader endpoint set in base.html.twig)
    Params need to be passed in this order:
params:
    field_name:         used for ids + fieldname    default: "r_file"
    field_label:        label for upload field      default: null, usually you may use "pdf.document"|trans, set to "hide" to hide label
    type:               sets mime_types             default: pdf
                                                    possible values: see FileInfo.js in demosplan-ui
    label:              button label                default: "form.button.upload.pdf"|trans({ maxUploadSize: human_max_upload_size })
    maxfiles:           limit max uploadable files  default: 1
                        linked to multi_instance    default: false (set to true if maxfiles > 1)
    multi_instance:     use for multiple instances  default: false
                        of uploader in one form
    field_hint:         additional hint below label default: ""
    field_required:     is this field required to fill out (needed for frontend validation) default: false
    callback:           function to execute in FileUploaded default: ""
    chunksize:          set chunk size when uploading large files    default: "Infinity"
    maxfilesize:        Max file size if other than `ini_get('upload_max_filesize')` default: 0
    omit_css_class_prefix: Omit CSS class prefix    default: true

Examples:
    You can use named arguments or positional arguments, but named arguments are recommended for better readability
    and to avoid errors due to the order of the arguments.

    Basic usage with default values
    {{ fileupload() }}

    Custom field name and label
    {{ fileupload(field_name: 'r_custom_file', field_label: 'Custom File') }}

    Setting a specific file type and max files
    {{ fileupload(type: 'img', maxfiles: 5) }}

    Setting chunk size (should be 'Infinity' for almost all cases)
    {{ fileupload(chunksize: '2MB') }}

    Setting max file size and making the field required
    {{ fileupload(maxfilesize: 10485760, field_required: true) }}
#}

    {%  set omitPrefix = omit_css_class_prefix ?? true %}

    {% if field_label != "hide" %}
        <label class="{{ 'u-mb-0 flow-root'|prefixClass(omitPrefix) }}" for="{{ element_id }}">
            {% autoescape false %}
                <span class="{{ 'block'|prefixClass(omitPrefix) }}">{{ field_label|default('pdf.document')|trans }}</span>
            {% endautoescape %}
            {% if field_hint|default != "" %}
                <span class="{{ 'lbl__hint block'|prefixClass(omitPrefix) }}">{{ field_hint|trans }}</span>
            {% endif %}
        </label>
    {% endif %}

    <dp-upload-files
        id="{{ element_id }}"
        :allow-multiple-uploads="{{ maxfiles > 1 ? 'true' : 'false' }}"
        :allowed-file-types="JSON.parse('{{ type|default( "pdf" )|json_encode|e('js', 'utf-8') }}')"
        :basic-auth="dplan.settings.basicAuth"
        :chunk-size="{{ chunksize|default('Infinity') }}"
        :get-file-by-hash="(hash) => {
            return Routing.generate('core_file', { hash: hash })
        }"
        name="{{ field_name|default }}"
        data-cy="{{ field_name|default }}"
        :max-file-size="{{ maxfilesize }}"
        :max-number-of-files="{{ maxfiles|default(1) }}"
        needs-hidden-input
        :required="{{ field_required ? 'true' : 'false' }}"
        :translations="{ dropHereOr: '{{ label|default( "form.button.upload.pdf")|trans( { browse: '{browse}', maxUploadSize: human_max_upload_size } ) }}' }"
        :tus-endpoint="dplan.paths.tusEndpoint">
    </dp-upload-files>
