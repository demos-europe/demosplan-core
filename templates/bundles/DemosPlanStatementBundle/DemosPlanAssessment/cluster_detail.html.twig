{% extends '@DemosPlanCore/DemosPlanCore/procedure.html.twig' %}
{# @improve T12757 #}

{% set statement = templateVars.table.statement %}
{% set readonly = templateVars.readOnly %}

{% set hashList = app.session.get('hashList', []) %}
{% set assessmentFilterHash = hashList[procedure]['assessment']['hash']|default(null) %}
{% set procedureId = procedureId is defined ? procedureId : procedure %}

{% block component_part %}
    {%- apply spaceless %}

        {# Header #}
        {% include '@DemosPlanCore/DemosPlanCore/includes/base_pageheader.html.twig' with {
            heading: 'statement.cluster'|trans ~ ' ' ~ statement.externId|default,
            subnav: [{
                href: '#',
                id: 'groupHistory',
                label: 'history',
                feature: 'feature_statement_content_changes_save'
            }]|filter(item => hasPermission(item.feature)),
            flush: true
        } %}

        {% set selectedCounties = [] %}
        {% for selectedCounty in statement.counties %}
            {% set selectedCounties = selectedCounties|merge([{id: selectedCounty.id, name: selectedCounty.name}]) %}
        {% endfor %}
        {% set selectedMunicipalities = [] %}
        {% for selectedMunicipality in statement.municipalities %}
            {% set selectedMunicipalities = selectedMunicipalities|merge([{id: selectedMunicipality.id, name: selectedMunicipality.name}]) %}
        {% endfor %}
        {% set selectedPriorityAreas = [] %}
        {% for selectedPriorityArea in statement.priorityAreas %}
            {% set selectedPriorityAreas = selectedPriorityAreas|merge([{id: selectedPriorityArea.id, name: selectedPriorityArea.name}]) %}
        {% endfor %}

        {% set statementTags = templateVars.table.statement.tags|map(el => { id: el.id, name: el.title }) %}

        {% set formDefinitions = {} %}
        {% for definition in templateVars.table.procedure.statementFormDefinition.fieldDefinitions %}
            {% set formDefinitions = formDefinitions|merge({ (definition.name): { id: definition.id, enabled: definition.enabled, required:definition.required } }) %}
        {% endfor %}

        {# Cluster #}
        <detail-view
            inline-template
            entity="cluster"
            extern-id="{{ statement.externId|default }}"
            :init-counties="JSON.parse('{{ selectedCounties|default([])|json_encode|e('js', 'utf-8') }}')"
            :init-municipalities="JSON.parse('{{ selectedMunicipalities|default([])|json_encode|e('js', 'utf-8') }}')"
            :init-priority-areas="JSON.parse('{{ selectedPriorityAreas|default([])|json_encode|e('js', 'utf-8') }}')"
            :init-tags="JSON.parse('{{ statementTags|default([])|json_encode|e('js', 'utf-8') }}')"
            procedure-id="{{ procedureId }}"
            :readonly="Boolean({{ readonly }})"
            statement-id="{{ templateVars.table.statement.ident }}">
            <form
                name="bpform"
                action="{{ path("DemosPlan_cluster_view", {'statement': templateVars.table.statement.ident, 'procedureId': procedure, 'isCluster': true}) }}"
                method="post"
                enctype="multipart/form-data"
            >
                <dp-map-modal
                    ref="mapModal"
                    procedure-id="{{ procedureId }}"
                >
                </dp-map-modal>

                {# Version History Slidebar #}
                <dp-slidebar>
                    <dp-version-history procedure-id="{{ procedure }}"></dp-version-history>
                </dp-slidebar>

                <input type="hidden" name="r_ident" value="{{ templateVars.table.statement.ident }}">
                <input type="hidden" name="r_action" value="update">
                <input type="hidden" name="r_publicAllowed" value="{{ templateVars.table.statement.publicAllowed }}">

                {# PDF Export #}
                <input type="hidden" name="item_check[]" value="{{ templateVars.table.statement.ident }}">
                <input type="hidden" name="r_export_format" value="pdf">
                <input type="hidden" name="r_export_choice" value='{"anonymous":false,"exportType":"statementsOnly","template":"portrait"}'>


                {# Fixed Subheader #}
                {% include '@DemosPlanCore/DemosPlanCore/includes/statement_detail_subheader.html.twig' with { entity: 'cluster' } %}

                {# cluster data #}
                <fieldset>

                    <dp-accordion
                        is-open
                        title="{{ "cluster.data"|trans }}">
                        <div class="o-box--dark u-ph u-pt-0_5">

                            {% block submitterNames %}
                            <h4 class="font-size-large u-pt-0_5">{{ 'submitters'|trans }} ({{ templateVars['table']['countOfClusterElements'] }})</h4>
                                <div class="layout--flush u-mb-0_75">
                                    <span class="layout__item display--block u-mb-0_25">
                                        <table class="u-mt-0_25 u-mb-0_75 u-1-of-2">
                                            <colgroup>
                                                {% if hasPermission('field_statement_intern_id') %}
                                                    <col style="width: 25%">
                                                    <col style="width: 25%">
                                                    <col>
                                                {% else %}
                                                    <col style="width: 15%">
                                                    <col style="width: 35%">
                                                    <col>
                                                {% endif %}
                                            </colgroup>

                                            <thead>
                                                <tr class="color--grey u-1-of-1">
                                                    <th class="text--left u-pr-2 u-pb-0_5 lbl color--grey-dark">{{ 'id'|trans }}</th>
                                                    {% if hasPermission('field_statement_intern_id') %}
                                                        <th class="text--left u-pr-2 u-pb-0_5 lbl color--grey-dark">{{ 'internId'|trans }}</th>
                                                    {% endif %}
                                                    {% if formDefinitions.name.enabled == true %}
                                                        <th class="text--left u-pr-2 u-pb-0_5 lbl color--grey-dark">{{ 'submitter.name'|trans }}</th>
                                                    {% endif %}
                                                </tr>
                                            </thead>
                                            <tbody>
                                                {% for stn in statement.cluster %}
                                                <tr class="">
                                                    <td class="u-pr-2">
                                                        <a class="layout__item u-pl-0" href="{{ path('DemosPlan_cluster_single_statement_view',{ 'statementId': stn.id|default, 'procedure': procedure })  }}">
                                                        {% if stn.original.ident is defined
                                                            and stn.parent.ident is defined
                                                            and statement.parent is not null
                                                            and statement.parent.ident is not null
                                                            and stn.original.ident != stn.parent.ident
                                                        %}
                                                            {{ 'copyof'|trans }}
                                                        {% endif %}
                                                            {{ stn.externId|default('-') }}
                                                    </a>
                                                    </td>
                                                    {% if hasPermission('field_statement_intern_id') %}
                                                        <td class="u-pr-2 color--grey">
                                                            {{ stn.internId|default('-') }}
                                                        </td>
                                                    {% endif %}
                                                    {% if formDefinitions.name.enabled == true %}
                                                        <td class="u-pr-2 color--grey">
                                                            {% if stn.publicStatement|default == 'external' %}
                                                                {{ stn.oName|default('-') }} {{ stn.uName|default }}
                                                            {% else %}
                                                                {{ stn.oName|default('-') }}
                                                            {% endif %}
                                                        </td>
                                                    {% endif %}
                                                </tr>
                                            {% endfor %}
                                            </tbody>
                                        </table>
                                    </span>
                                </div>
                            {% endblock %}

                            {% include '@DemosPlanAssessmentTable/DemosPlan/shared/v1/assessment_cluster_detail_statement_data.html.twig' with { 'readonly': readonly } %}
                        </div>
                    </dp-accordion>
                </fieldset>


                {# statement text + consideration #}
                {% include '@DemosPlanAssessmentTable/DemosPlan/shared/v1/assessment_statement_detail_statement_text.html.twig' with { 'readonly': readonly } %}


                {# memo #}
                {% if hasPermission('field_statement_memo') %}
                    <fieldset>
                        <dp-accordion title="{{ "create.note"|trans }}">
                            <div class="o-box--dark u-mt-0_25 u-ph u-pv-0_5">
                                {{ uiComponent('form.textarea', {
                                    name: 'r_memo',
                                    value: statement.memo|default ,
                                    type: 'textarea',
                                    id: 'r_memo',
                                    disabled: readonly
                                }) }}
                            </div>
                        </dp-accordion>
                    </fieldset>
                {% endif %}


                {# button row #}
                {% if not readonly %}
                    <div class="text--right">
                        <input class="btn btn--primary u-pr-0_5-desk-down u-pl-0_5-desk-down" type="submit" name="submit_item_button" value="{{ "save"|trans }}">
                        <input class="btn btn--primary u-pr-0_5-desk-down u-pl-0_5-desk-down" type="submit" name="submit_item_return_button" v-save-and-return value="{{ "save.and.return.to.list"|trans }}">
                        <a class="btn btn--secondary u-pr-0_5-desk-down u-pl-0_5-desk-down" role="button"
                           href="{{ path('dplan_assessmenttable_view_table', {'procedureId':procedure, 'filterHash': assessmentFilterHash, '_fragment': 'itemdisplay_' ~ statement.ident }) }}">
                            {{ "abort"|trans }}
                        </a>
                    </div>
                {% endif %}

            </form>
        </detail-view>

    {%- endapply %}
{% endblock component_part %}

{% block javascripts %}
    {{ parent() }}
    {{ webpackBundles(['tiptap.js', 'ol.js', 'statement-assessmentStatement.js']) }}
    <script nonce="{{ csp_nonce('script') }}">
        const setElement = function (value) {
            Array.from(document.querySelectorAll('.js-paragraph')).forEach(el => {
                el.setAttribute('style', 'display: none')
            })
            if (value !== '') {
                document.getElementById('js-paragraph_' + value).removeAttribute('style')
            }
        }
        value = document.getElementById('elementSelect').value

        setElement(value)
        document.getElementById('elementSelect').addEventListener('change', setElement)

        function submitForm(event, task){
            var oldTarget = document.bpform.target;
            var oldAction = document.bpform.action;

            switch(task){
                case 'send':
                {% if templateVars.table.statement.isSubmittedByCitizen == false %}
                    abfrage_box = confirm(decodeURI("{{ "check.mail.result"|trans }}"));
                {% else %}
                    abfrage_box = confirm(decodeURI("{{ "check.mail.result.citizen"|trans }}"));
                {% endif %}
                    if (abfrage_box === true){
                        document.bpform.r_action.value = 'send';
                        document.bpform.submit();
                    }
                    break;

                case 'export':
                    event.preventDefault();
                    document.bpform.action = "{{ path("DemosPlan_assessment_table_export", {'procedureId': procedure}) }}";
                    //  submit form
                    document.bpform.submit();
                    break;

            }
            document.bpform.target = oldTarget;
            document.bpform.action = oldAction;
        }

        if (document.querySelector('[data-export-form]')) {
            document.querySelector('[data-export-form]').addEventListener('click', function (event) {
                submitForm(event, 'export')
            })
        }
    </script>

{% endblock javascripts %}
