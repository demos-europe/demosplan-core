# https://github.com/nelmio/NelmioSecurityBundle
nelmio_security:
    csp:
        enabled: true
        enforce:
            # see full description below
            level1_fallback: true
            # only send directives supported by the browser, defaults to false
            # this is a port of https://github.com/twitter/secureheaders/blob/83a564a235c8be1a8a3901373dbc769da32f6ed7/lib/secure_headers/headers/policy_management.rb#L97
            browser_adaptive:
                enabled: true
            report-uri: "%router.request_context.base_url%/nelmio/csp/report"
            default-src: [ 'self' ]
            frame-src: '%demosplan_csp_frame_src%'
            # Backward compatible frame-src
            child-src: [ ]
            frame-ancestors: '%demosplan_csp_frame_ancestors%'
            script-src: '%demosplan_csp_script_src%'
            font-src: '%demosplan_csp_font_src%'
            style-src: '%demosplan_csp_style_src%'
            img-src:
                - 'self'
                - 'unsafe-inline' # needed for map layers
                - '*'
                - 'data:'
            # needs to be set to * as gislayer getCapabilities are called via ajax
            connect-src:
                - '*'
            object-src:
                - 'self'
            base-uri: '%demosplan_csp_base_uri%'
            form-action: '%demosplan_csp_form_action%'
            worker-src:
                - 'none'
            upgrade-insecure-requests: '%https_only%' # upgrades HTTP requests to HTTPS transport
        # log csp violations to a custom log channel
        report_logger_service: monolog.logger.dplan_csp
        report_endpoint:
            log_channel: "dplan_csp"

        compat_headers: false #Disable compat_headers to avoid sending X-Content-Security-Policy (IE10, IE11, Firefox < 23). This will mean those browsers get no CSP instructions.
    clickjacking:
        paths:
            '^/.*': DENY
        content_types: []

    content_type:
        nosniff: true

    xss_protection:
        enabled: true
        mode_block: true

    # Send a full URL in the `Referer` header when performing a same-origin request,
    # only send the origin of the document to secure destination (HTTPS->HTTPS),
    # and send no header to a less secure destination (HTTPS->HTTP).
    # If `strict-origin-when-cross-origin` is not supported, use `no-referrer` policy,
    # no referrer information is sent along with requests.
    referrer_policy:
        enabled: true
        policies:
            - 'no-referrer'
            - 'strict-origin-when-cross-origin'
